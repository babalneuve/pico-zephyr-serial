/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   C:/Users/EXT_BASVER/zephyrproject/pico-zephyr-serial/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE\dts\bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /connector
 *   4   /soc
 *   5   /pin-controller
 *   6   /pin-controller/adc_default
 *   7   /soc/interrupt-controller@e000e100
 *   8   /soc/reset-controller@4000c000
 *   9   /soc/adc@4004c000
 *   10  /dietemp
 *   11  /cpus
 *   12  /cpus/cpu@0
 *   13  /cpus/cpu@1
 *   14  /leds
 *   15  /soc/gpio@40014000
 *   16  /leds/led_0
 *   17  /pin-controller/adc_default/group1
 *   18  /pin-controller/i2c0_default
 *   19  /pin-controller/i2c0_default/group1
 *   20  /pin-controller/pwm_ch4b_default
 *   21  /pin-controller/pwm_ch4b_default/group1
 *   22  /pin-controller/spi0_default
 *   23  /pin-controller/spi0_default/group1
 *   24  /pin-controller/spi0_default/group2
 *   25  /pin-controller/uart0_default
 *   26  /pin-controller/uart0_default/group1
 *   27  /pin-controller/uart0_default/group2
 *   28  /pwm_leds
 *   29  /soc/system-clk
 *   30  /soc/pwm@40050000
 *   31  /pwm_leds/pwm_led_0
 *   32  /soc/dma@50000000
 *   33  /soc/i2c@40044000
 *   34  /soc/i2c@40048000
 *   35  /soc/memory@20000000
 *   36  /soc/pio@50200000
 *   37  /soc/pio@50300000
 *   38  /soc/peripheral-clk
 *   39  /soc/spi@4003c000
 *   40  /soc/spi@40040000
 *   41  /xtal-clk
 *   42  /soc/timer@40054000
 *   43  /soc/timer@e000e010
 *   44  /soc/uart@40034000
 *   45  /soc/uart@40038000
 *   46  /soc/vreg@40064000
 *   47  /soc/watchdog@40058000
 *   48  /soc/flash-controller@18000000
 *   49  /soc/flash-controller@18000000/flash@10000000
 *   50  /soc/flash-controller@18000000/flash@10000000/partitions
 *   51  /soc/flash-controller@18000000/flash@10000000/partitions/partition@0
 *   52  /soc/flash-controller@18000000/flash@10000000/partitions/partition@100
 *   53  /soc/usbd@50100000
 *   54  /soc/usbd@50100000/cdc_acm_uart0
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"

/* Helper macros for child nodes of this node. */
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_pin_controller) fn(DT_N_S_dietemp) fn(DT_N_S_xtal_clk) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_pwm_leds)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_xtal_clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwm_leds)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_xtal_clk, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_pwm_leds, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_dietemp, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_xtal_clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pwm_leds, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_pin_controller) fn(DT_N_S_xtal_clk) fn(DT_N_S_connector) fn(DT_N_S_leds)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_xtal_clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_xtal_clk, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_xtal_clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_connector, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /connector */ \
	4, /* /soc */ \
	5, /* /pin-controller */ \
	10, /* /dietemp */ \
	11, /* /cpus */ \
	14, /* /leds */ \
	28, /* /pwm_leds */ \
	41, /* /xtal-clk */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /connector
 *
 * Node identifier: DT_N_S_connector
 *
 * Binding (compatible = raspberrypi,pico-header):
 *   $ZEPHYR_BASE\dts\bindings\gpio\raspberrypi,pico-header.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_connector_PATH "/connector"

/* Node's name with unit-address: */
#define DT_N_S_connector_FULL_NAME "connector"

/* Node parent (/) identifier: */
#define DT_N_S_connector_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_connector_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_connector_FOREACH_CHILD(fn) 
#define DT_N_S_connector_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_connector_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_connector_ORD 3
#define DT_N_S_connector_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_connector_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_connector_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_connector_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_header DT_N_S_connector
#define DT_N_NODELABEL_pico_header          DT_N_S_connector

/* Macros for properties that are special in the specification: */
#define DT_N_S_connector_REG_NUM 0
#define DT_N_S_connector_RANGES_NUM 0
#define DT_N_S_connector_FOREACH_RANGE(fn) 
#define DT_N_S_connector_IRQ_NUM 0
#define DT_N_S_connector_COMPAT_MATCHES_raspberrypi_pico_header 1
#define DT_N_S_connector_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_connector_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_connector_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_connector_COMPAT_MODEL_IDX_0 "pico-header"
#define DT_N_S_connector_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_connector_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_connector_P_compatible {"raspberrypi,pico-header"}
#define DT_N_S_connector_P_compatible_IDX_0 "raspberrypi,pico-header"
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-header
#define DT_N_S_connector_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_header
#define DT_N_S_connector_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_HEADER
#define DT_N_S_connector_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_connector, compatible, 0)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_connector, compatible, 0, __VA_ARGS__)
#define DT_N_S_connector_P_compatible_LEN 1
#define DT_N_S_connector_P_compatible_EXISTS 1
#define DT_N_S_connector_P_wakeup_source 0
#define DT_N_S_connector_P_wakeup_source_EXISTS 1
#define DT_N_S_connector_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_connector_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_flash_controller_18000000) fn(DT_N_S_soc_S_peripheral_clk) fn(DT_N_S_soc_S_system_clk) fn(DT_N_S_soc_S_reset_controller_4000c000) fn(DT_N_S_soc_S_gpio_40014000) fn(DT_N_S_soc_S_uart_40034000) fn(DT_N_S_soc_S_uart_40038000) fn(DT_N_S_soc_S_spi_4003c000) fn(DT_N_S_soc_S_spi_40040000) fn(DT_N_S_soc_S_adc_4004c000) fn(DT_N_S_soc_S_i2c_40044000) fn(DT_N_S_soc_S_i2c_40048000) fn(DT_N_S_soc_S_watchdog_40058000) fn(DT_N_S_soc_S_usbd_50100000) fn(DT_N_S_soc_S_pwm_40050000) fn(DT_N_S_soc_S_timer_40054000) fn(DT_N_S_soc_S_dma_50000000) fn(DT_N_S_soc_S_vreg_40064000) fn(DT_N_S_soc_S_pio_50200000) fn(DT_N_S_soc_S_pio_50300000)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_18000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_peripheral_clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_controller_4000c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40014000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40034000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40038000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_4003c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40040000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_4004c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40044000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40048000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40058000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_50100000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40050000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40054000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_50000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_vreg_40064000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pio_50200000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pio_50300000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_18000000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_clk, __VA_ARGS__) fn(DT_N_S_soc_S_system_clk, __VA_ARGS__) fn(DT_N_S_soc_S_reset_controller_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40034000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40038000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_4003c000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40040000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_4004c000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40044000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40048000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40058000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_50100000, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40050000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40054000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_vreg_40064000, __VA_ARGS__) fn(DT_N_S_soc_S_pio_50200000, __VA_ARGS__) fn(DT_N_S_soc_S_pio_50300000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_18000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_peripheral_clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_controller_4000c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40014000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40034000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40038000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_4003c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_40040000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_4004c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40044000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40048000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40058000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_50100000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pwm_40050000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40054000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_50000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_vreg_40064000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pio_50200000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pio_50300000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_flash_controller_18000000) fn(DT_N_S_soc_S_peripheral_clk) fn(DT_N_S_soc_S_system_clk) fn(DT_N_S_soc_S_reset_controller_4000c000) fn(DT_N_S_soc_S_gpio_40014000) fn(DT_N_S_soc_S_uart_40034000) fn(DT_N_S_soc_S_spi_4003c000) fn(DT_N_S_soc_S_adc_4004c000) fn(DT_N_S_soc_S_i2c_40044000) fn(DT_N_S_soc_S_watchdog_40058000) fn(DT_N_S_soc_S_usbd_50100000) fn(DT_N_S_soc_S_timer_40054000) fn(DT_N_S_soc_S_vreg_40064000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_18000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_peripheral_clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_controller_4000c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40014000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40034000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_4003c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_4004c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40044000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40058000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_50100000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40054000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_vreg_40064000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_18000000, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_clk, __VA_ARGS__) fn(DT_N_S_soc_S_system_clk, __VA_ARGS__) fn(DT_N_S_soc_S_reset_controller_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40034000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_4003c000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_4004c000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40044000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40058000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_50100000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40054000, __VA_ARGS__) fn(DT_N_S_soc_S_vreg_40064000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_18000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_peripheral_clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_system_clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_reset_controller_4000c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_40014000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_40034000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_4003c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_4004c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_40044000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_40058000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usbd_50100000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_40054000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_vreg_40064000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 4
#define DT_N_S_soc_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/reset-controller@4000c000 */ \
	9, /* /soc/adc@4004c000 */ \
	15, /* /soc/gpio@40014000 */ \
	29, /* /soc/system-clk */ \
	30, /* /soc/pwm@40050000 */ \
	32, /* /soc/dma@50000000 */ \
	33, /* /soc/i2c@40044000 */ \
	34, /* /soc/i2c@40048000 */ \
	35, /* /soc/memory@20000000 */ \
	36, /* /soc/pio@50200000 */ \
	37, /* /soc/pio@50300000 */ \
	38, /* /soc/peripheral-clk */ \
	39, /* /soc/spi@4003c000 */ \
	40, /* /soc/spi@40040000 */ \
	42, /* /soc/timer@40054000 */ \
	43, /* /soc/timer@e000e010 */ \
	44, /* /soc/uart@40034000 */ \
	45, /* /soc/uart@40038000 */ \
	46, /* /soc/vreg@40064000 */ \
	47, /* /soc/watchdog@40058000 */ \
	48, /* /soc/flash-controller@18000000 */ \
	53, /* /soc/usbd@50100000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /pin-controller
 *
 * Node identifier: DT_N_S_pin_controller
 *
 * Binding (compatible = raspberrypi,pico-pinctrl):
 *   $ZEPHYR_BASE\dts\bindings\pinctrl\raspberrypi,pico-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_PATH "/pin-controller"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_FULL_NAME "pin-controller"

/* Node parent (/) identifier: */
#define DT_N_S_pin_controller_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_spi0_default) fn(DT_N_S_pin_controller_S_pwm_ch4b_default) fn(DT_N_S_pin_controller_S_adc_default)
#define DT_N_S_pin_controller_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_pwm_ch4b_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_adc_default)
#define DT_N_S_pin_controller_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm_ch4b_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_adc_default, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_pwm_ch4b_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_adc_default, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_spi0_default) fn(DT_N_S_pin_controller_S_pwm_ch4b_default) fn(DT_N_S_pin_controller_S_adc_default)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_pwm_ch4b_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_adc_default)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm_ch4b_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_adc_default, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_pwm_ch4b_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_adc_default, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_ORD 5
#define DT_N_S_pin_controller_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_SUPPORTS_ORDS \
	6, /* /pin-controller/adc_default */ \
	18, /* /pin-controller/i2c0_default */ \
	20, /* /pin-controller/pwm_ch4b_default */ \
	22, /* /pin-controller/spi0_default */ \
	25, /* /pin-controller/uart0_default */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_pinctrl DT_N_S_pin_controller
#define DT_N_NODELABEL_pinctrl               DT_N_S_pin_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_REG_NUM 0
#define DT_N_S_pin_controller_RANGES_NUM 0
#define DT_N_S_pin_controller_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_IRQ_NUM 0
#define DT_N_S_pin_controller_COMPAT_MATCHES_raspberrypi_pico_pinctrl 1
#define DT_N_S_pin_controller_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_pin_controller_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_COMPAT_MODEL_IDX_0 "pico-pinctrl"
#define DT_N_S_pin_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_P_compatible {"raspberrypi,pico-pinctrl"}
#define DT_N_S_pin_controller_P_compatible_IDX_0 "raspberrypi,pico-pinctrl"
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-pinctrl
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_pinctrl
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_PINCTRL
#define DT_N_S_pin_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_LEN 1
#define DT_N_S_pin_controller_P_compatible_EXISTS 1
#define DT_N_S_pin_controller_P_wakeup_source 0
#define DT_N_S_pin_controller_P_wakeup_source_EXISTS 1
#define DT_N_S_pin_controller_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_pin_controller_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pin-controller/adc_default
 *
 * Node identifier: DT_N_S_pin_controller_S_adc_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_adc_default_PATH "/pin-controller/adc_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_adc_default_FULL_NAME "adc_default"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_adc_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_adc_default_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_adc_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_adc_default_S_group1)
#define DT_N_S_pin_controller_S_adc_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_adc_default_S_group1)
#define DT_N_S_pin_controller_S_adc_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_adc_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_adc_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_adc_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_adc_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_adc_default_S_group1)
#define DT_N_S_pin_controller_S_adc_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_adc_default_S_group1)
#define DT_N_S_pin_controller_S_adc_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_adc_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_adc_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_adc_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_adc_default_ORD 6
#define DT_N_S_pin_controller_S_adc_default_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_adc_default_REQUIRES_ORDS \
	5, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_adc_default_SUPPORTS_ORDS \
	9, /* /soc/adc@4004c000 */ \
	17, /* /pin-controller/adc_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_adc_default_EXISTS 1
#define DT_N_NODELABEL_adc_default DT_N_S_pin_controller_S_adc_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_adc_default_REG_NUM 0
#define DT_N_S_pin_controller_S_adc_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_adc_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_adc_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_adc_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_adc_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v6m-nvic):
 *   $ZEPHYR_BASE\dts\bindings\interrupt-controller\arm,v6m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 7
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	9, /* /soc/adc@4004c000 */ \
	15, /* /soc/gpio@40014000 */ \
	30, /* /soc/pwm@40050000 */ \
	32, /* /soc/dma@50000000 */ \
	33, /* /soc/i2c@40044000 */ \
	34, /* /soc/i2c@40048000 */ \
	39, /* /soc/spi@4003c000 */ \
	40, /* /soc/spi@40040000 */ \
	42, /* /soc/timer@40054000 */ \
	44, /* /soc/uart@40034000 */ \
	45, /* /soc/uart@40038000 */ \
	53, /* /soc/usbd@50100000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v6m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v6m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v6m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 3
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v6m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v6m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v6m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v6m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V6M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/reset-controller@4000c000
 *
 * Node identifier: DT_N_S_soc_S_reset_controller_4000c000
 *
 * Binding (compatible = raspberrypi,pico-reset):
 *   $ZEPHYR_BASE\dts\bindings\reset\raspberrypi,pico-reset.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_reset_controller_4000c000_PATH "/soc/reset-controller@4000c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_reset_controller_4000c000_FULL_NAME "reset-controller@4000c000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_reset_controller_4000c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_reset_controller_4000c000_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_reset_controller_4000c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_reset_controller_4000c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_reset_controller_4000c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_reset_controller_4000c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_reset_controller_4000c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_reset_controller_4000c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_reset_controller_4000c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_reset_controller_4000c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_reset_controller_4000c000_ORD 8
#define DT_N_S_soc_S_reset_controller_4000c000_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_reset_controller_4000c000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_reset_controller_4000c000_SUPPORTS_ORDS \
	9, /* /soc/adc@4004c000 */ \
	30, /* /soc/pwm@40050000 */ \
	32, /* /soc/dma@50000000 */ \
	33, /* /soc/i2c@40044000 */ \
	34, /* /soc/i2c@40048000 */ \
	36, /* /soc/pio@50200000 */ \
	37, /* /soc/pio@50300000 */ \
	39, /* /soc/spi@4003c000 */ \
	40, /* /soc/spi@40040000 */ \
	42, /* /soc/timer@40054000 */ \
	44, /* /soc/uart@40034000 */ \
	45, /* /soc/uart@40038000 */ \
	53, /* /soc/usbd@50100000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_reset_controller_4000c000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_reset DT_N_S_soc_S_reset_controller_4000c000
#define DT_N_NODELABEL_reset               DT_N_S_soc_S_reset_controller_4000c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_reset_controller_4000c000_REG_NUM 1
#define DT_N_S_soc_S_reset_controller_4000c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_controller_4000c000_REG_IDX_0_VAL_ADDRESS 1073790976 /* 0x4000c000 */
#define DT_N_S_soc_S_reset_controller_4000c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_reset_controller_4000c000_RANGES_NUM 0
#define DT_N_S_soc_S_reset_controller_4000c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_reset_controller_4000c000_IRQ_NUM 0
#define DT_N_S_soc_S_reset_controller_4000c000_COMPAT_MATCHES_raspberrypi_pico_reset 1
#define DT_N_S_soc_S_reset_controller_4000c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_controller_4000c000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_reset_controller_4000c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_controller_4000c000_COMPAT_MODEL_IDX_0 "pico-reset"
#define DT_N_S_soc_S_reset_controller_4000c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_reset_controller_4000c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_reset_controller_4000c000_P_reg {1073790976 /* 0x4000c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_reset_controller_4000c000_P_reg_IDX_0 1073790976
#define DT_N_S_soc_S_reset_controller_4000c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_controller_4000c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_reset_controller_4000c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_reset_controller_4000c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_reset_controller_4000c000_P_reg_width 4
#define DT_N_S_soc_S_reset_controller_4000c000_P_reg_width_EXISTS 1
#define DT_N_S_soc_S_reset_controller_4000c000_P_active_low 0
#define DT_N_S_soc_S_reset_controller_4000c000_P_active_low_EXISTS 1
#define DT_N_S_soc_S_reset_controller_4000c000_P_compatible {"raspberrypi,pico-reset"}
#define DT_N_S_soc_S_reset_controller_4000c000_P_compatible_IDX_0 "raspberrypi,pico-reset"
#define DT_N_S_soc_S_reset_controller_4000c000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-reset
#define DT_N_S_soc_S_reset_controller_4000c000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_reset
#define DT_N_S_soc_S_reset_controller_4000c000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_RESET
#define DT_N_S_soc_S_reset_controller_4000c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_reset_controller_4000c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_reset_controller_4000c000, compatible, 0)
#define DT_N_S_soc_S_reset_controller_4000c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_reset_controller_4000c000, compatible, 0)
#define DT_N_S_soc_S_reset_controller_4000c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_reset_controller_4000c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_reset_controller_4000c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_reset_controller_4000c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_reset_controller_4000c000_P_compatible_LEN 1
#define DT_N_S_soc_S_reset_controller_4000c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_reset_controller_4000c000_P_wakeup_source 0
#define DT_N_S_soc_S_reset_controller_4000c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_reset_controller_4000c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_reset_controller_4000c000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/adc@4004c000
 *
 * Node identifier: DT_N_S_soc_S_adc_4004c000
 *
 * Binding (compatible = raspberrypi,pico-adc):
 *   $ZEPHYR_BASE\dts\bindings\adc\raspberrypi,pico-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_4004c000_PATH "/soc/adc@4004c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_4004c000_FULL_NAME "adc@4004c000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_4004c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_4004c000_CHILD_IDX 12

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_4004c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_4004c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_4004c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_4004c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_4004c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_4004c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_4004c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_4004c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_4004c000_ORD 9
#define DT_N_S_soc_S_adc_4004c000_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_4004c000_REQUIRES_ORDS \
	4, /* /soc */ \
	6, /* /pin-controller/adc_default */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/reset-controller@4000c000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_4004c000_SUPPORTS_ORDS \
	10, /* /dietemp */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_4004c000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_adc DT_N_S_soc_S_adc_4004c000
#define DT_N_NODELABEL_adc               DT_N_S_soc_S_adc_4004c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_4004c000_REG_NUM 1
#define DT_N_S_soc_S_adc_4004c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_REG_IDX_0_VAL_ADDRESS 1074053120 /* 0x4004c000 */
#define DT_N_S_soc_S_adc_4004c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_adc_4004c000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_4004c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_4004c000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_4004c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_IRQ_IDX_0_VAL_irq 22
#define DT_N_S_soc_S_adc_4004c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_adc_4004c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_IRQ_NAME_adc0_VAL_irq DT_N_S_soc_S_adc_4004c000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_adc_4004c000_IRQ_NAME_adc0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_IRQ_NAME_adc0_VAL_priority DT_N_S_soc_S_adc_4004c000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_adc_4004c000_IRQ_NAME_adc0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_COMPAT_MATCHES_raspberrypi_pico_adc 1
#define DT_N_S_soc_S_adc_4004c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_adc_4004c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_COMPAT_MODEL_IDX_0 "pico-adc"
#define DT_N_S_soc_S_adc_4004c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_4004c000_PINCTRL_NUM 1
#define DT_N_S_soc_S_adc_4004c000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_adc_4004c000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_4004c000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_adc_4004c000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_adc_default

/* Generic property macros: */
#define DT_N_S_soc_S_adc_4004c000_P_reg {1074053120 /* 0x4004c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_adc_4004c000_P_reg_IDX_0 1074053120
#define DT_N_S_soc_S_adc_4004c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_adc_4004c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_vref_mv 3300
#define DT_N_S_soc_S_adc_4004c000_P_vref_mv_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_status "okay"
#define DT_N_S_soc_S_adc_4004c000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_adc_4004c000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_adc_4004c000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_4004c000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_adc_4004c000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_adc_4004c000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_adc_4004c000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_4004c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_4004c000, status, 0)
#define DT_N_S_soc_S_adc_4004c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_4004c000, status, 0)
#define DT_N_S_soc_S_adc_4004c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_4004c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4004c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_4004c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4004c000_P_status_LEN 1
#define DT_N_S_soc_S_adc_4004c000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_compatible {"raspberrypi,pico-adc"}
#define DT_N_S_soc_S_adc_4004c000_P_compatible_IDX_0 "raspberrypi,pico-adc"
#define DT_N_S_soc_S_adc_4004c000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-adc
#define DT_N_S_soc_S_adc_4004c000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_adc
#define DT_N_S_soc_S_adc_4004c000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_ADC
#define DT_N_S_soc_S_adc_4004c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_4004c000, compatible, 0)
#define DT_N_S_soc_S_adc_4004c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_4004c000, compatible, 0)
#define DT_N_S_soc_S_adc_4004c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_4004c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4004c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_4004c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4004c000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_4004c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_interrupts {22 /* 0x16 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_adc_4004c000_P_interrupts_IDX_0 22
#define DT_N_S_soc_S_adc_4004c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_adc_4004c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_interrupt_names {"adc0"}
#define DT_N_S_soc_S_adc_4004c000_P_interrupt_names_IDX_0 "adc0"
#define DT_N_S_soc_S_adc_4004c000_P_interrupt_names_IDX_0_STRING_UNQUOTED adc0
#define DT_N_S_soc_S_adc_4004c000_P_interrupt_names_IDX_0_STRING_TOKEN adc0
#define DT_N_S_soc_S_adc_4004c000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN ADC0
#define DT_N_S_soc_S_adc_4004c000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_4004c000, interrupt_names, 0)
#define DT_N_S_soc_S_adc_4004c000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_4004c000, interrupt_names, 0)
#define DT_N_S_soc_S_adc_4004c000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_4004c000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4004c000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_4004c000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4004c000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_adc_4004c000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_4004c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_4004c000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_adc_default
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_adc_default
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_4004c000, pinctrl_0, 0)
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_4004c000, pinctrl_0, 0)
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_4004c000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_4004c000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_4004c000, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_4004c000, pinctrl_names, 0)
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_4004c000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_4004c000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_adc_4004c000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_4000c000
#define DT_N_S_soc_S_adc_4004c000_P_resets_IDX_0_VAL_id 0
#define DT_N_S_soc_S_adc_4004c000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_adc_4004c000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_4004c000, resets, 0)
#define DT_N_S_soc_S_adc_4004c000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_4004c000, resets, 0)
#define DT_N_S_soc_S_adc_4004c000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_4004c000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4004c000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_4004c000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_4004c000_P_resets_LEN 1
#define DT_N_S_soc_S_adc_4004c000_P_resets_EXISTS 1

/*
 * Devicetree node: /dietemp
 *
 * Node identifier: DT_N_S_dietemp
 *
 * Binding (compatible = raspberrypi,pico-temp):
 *   $ZEPHYR_BASE\dts\bindings\sensor\raspberrrypi,pico-temp.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_dietemp_PATH "/dietemp"

/* Node's name with unit-address: */
#define DT_N_S_dietemp_FULL_NAME "dietemp"

/* Node parent (/) identifier: */
#define DT_N_S_dietemp_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_dietemp_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_dietemp_FOREACH_CHILD(fn) 
#define DT_N_S_dietemp_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_dietemp_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_dietemp_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_dietemp_ORD 10
#define DT_N_S_dietemp_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_dietemp_REQUIRES_ORDS \
	0, /* / */ \
	9, /* /soc/adc@4004c000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_dietemp_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_dietemp_EXISTS 1
#define DT_N_ALIAS_die_temp0              DT_N_S_dietemp
#define DT_N_INST_0_raspberrypi_pico_temp DT_N_S_dietemp
#define DT_N_NODELABEL_die_temp           DT_N_S_dietemp

/* Macros for properties that are special in the specification: */
#define DT_N_S_dietemp_REG_NUM 0
#define DT_N_S_dietemp_RANGES_NUM 0
#define DT_N_S_dietemp_FOREACH_RANGE(fn) 
#define DT_N_S_dietemp_IRQ_NUM 0
#define DT_N_S_dietemp_COMPAT_MATCHES_raspberrypi_pico_temp 1
#define DT_N_S_dietemp_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_dietemp_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_dietemp_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_dietemp_COMPAT_MODEL_IDX_0 "pico-temp"
#define DT_N_S_dietemp_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_dietemp_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_dietemp_P_io_channels_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_IDX_0_PH DT_N_S_soc_S_adc_4004c000
#define DT_N_S_dietemp_P_io_channels_IDX_0_VAL_input 4
#define DT_N_S_dietemp_P_io_channels_IDX_0_VAL_input_EXISTS 1
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, io_channels, 0)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, io_channels, 0)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, io_channels, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_io_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, io_channels, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_io_channels_LEN 1
#define DT_N_S_dietemp_P_io_channels_EXISTS 1
#define DT_N_S_dietemp_P_vbe 706000
#define DT_N_S_dietemp_P_vbe_EXISTS 1
#define DT_N_S_dietemp_P_vbe_slope -1721
#define DT_N_S_dietemp_P_vbe_slope_EXISTS 1
#define DT_N_S_dietemp_P_status "disabled"
#define DT_N_S_dietemp_P_status_STRING_UNQUOTED disabled
#define DT_N_S_dietemp_P_status_STRING_TOKEN disabled
#define DT_N_S_dietemp_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_dietemp_P_status_IDX_0 "disabled"
#define DT_N_S_dietemp_P_status_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_status_ENUM_IDX 2
#define DT_N_S_dietemp_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_dietemp_P_status_ENUM_TOKEN disabled
#define DT_N_S_dietemp_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, status, 0)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, status, 0)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, status, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, status, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_status_LEN 1
#define DT_N_S_dietemp_P_status_EXISTS 1
#define DT_N_S_dietemp_P_compatible {"raspberrypi,pico-temp"}
#define DT_N_S_dietemp_P_compatible_IDX_0 "raspberrypi,pico-temp"
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-temp
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_temp
#define DT_N_S_dietemp_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_TEMP
#define DT_N_S_dietemp_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_dietemp, compatible, 0)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_dietemp, compatible, 0)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_dietemp, compatible, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_dietemp, compatible, 0, __VA_ARGS__)
#define DT_N_S_dietemp_P_compatible_LEN 1
#define DT_N_S_dietemp_P_compatible_EXISTS 1
#define DT_N_S_dietemp_P_wakeup_source 0
#define DT_N_S_dietemp_P_wakeup_source_EXISTS 1
#define DT_N_S_dietemp_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_dietemp_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 11
#define DT_N_S_cpus_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	12, /* /cpus/cpu@0 */ \
	13, /* /cpus/cpu@1 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m0+):
 *   $ZEPHYR_BASE\dts\bindings\cpu\arm,cortex-m0+.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 12
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	11, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m0_ DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0        DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m0_ 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m0+"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m0+"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m0+"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m0+
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m0_
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M0_
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@1
 *
 * Node identifier: DT_N_S_cpus_S_cpu_1
 *
 * Binding (compatible = arm,cortex-m0+):
 *   $ZEPHYR_BASE\dts\bindings\cpu\arm,cortex-m0+.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_1_PATH "/cpus/cpu@1"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_1_FULL_NAME "cpu@1"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_1_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_1_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_1_ORD 13
#define DT_N_S_cpus_S_cpu_1_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_1_REQUIRES_ORDS \
	11, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_1_EXISTS 1
#define DT_N_INST_1_arm_cortex_m0_ DT_N_S_cpus_S_cpu_1
#define DT_N_NODELABEL_cpu1        DT_N_S_cpus_S_cpu_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_1_REG_NUM 1
#define DT_N_S_cpus_S_cpu_1_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_cpus_S_cpu_1_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_1_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_1_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_1_COMPAT_MATCHES_arm_cortex_m0_ 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_MODEL_IDX_0 "cortex-m0+"
#define DT_N_S_cpus_S_cpu_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_1_P_compatible {"arm,cortex-m0+"}
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0 "arm,cortex-m0+"
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m0+
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m0_
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M0_
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_1, compatible, 0)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_1, compatible, 0)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_1_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_reg {1 /* 0x1 */}
#define DT_N_S_cpus_S_cpu_1_P_reg_IDX_0 1
#define DT_N_S_cpus_S_cpu_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_1_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_1_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE\dts\bindings\led\gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_0)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 14
#define DT_N_S_leds_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	16, /* /leds/led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/gpio@40014000
 *
 * Node identifier: DT_N_S_soc_S_gpio_40014000
 *
 * Binding (compatible = raspberrypi,pico-gpio):
 *   $ZEPHYR_BASE\dts\bindings\gpio\raspberrypi,pico-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_40014000_PATH "/soc/gpio@40014000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_40014000_FULL_NAME "gpio@40014000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_40014000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_40014000_CHILD_IDX 7

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_40014000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_40014000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40014000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40014000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_40014000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_40014000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_40014000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_40014000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_40014000_ORD 15
#define DT_N_S_soc_S_gpio_40014000_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_40014000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_40014000_SUPPORTS_ORDS \
	16, /* /leds/led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_40014000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_gpio DT_N_S_soc_S_gpio_40014000
#define DT_N_NODELABEL_gpio0              DT_N_S_soc_S_gpio_40014000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_40014000_REG_NUM 1
#define DT_N_S_soc_S_gpio_40014000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_REG_IDX_0_VAL_ADDRESS 1073823744 /* 0x40014000 */
#define DT_N_S_soc_S_gpio_40014000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_gpio_40014000_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_40014000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_40014000_IRQ_NUM 1
#define DT_N_S_soc_S_gpio_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_IRQ_IDX_0_VAL_irq 13
#define DT_N_S_soc_S_gpio_40014000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_gpio_40014000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_COMPAT_MATCHES_raspberrypi_pico_gpio 1
#define DT_N_S_soc_S_gpio_40014000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_gpio_40014000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_COMPAT_MODEL_IDX_0 "pico-gpio"
#define DT_N_S_soc_S_gpio_40014000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_40014000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_40014000_P_reg {1073823744 /* 0x40014000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_gpio_40014000_P_reg_IDX_0 1073823744
#define DT_N_S_soc_S_gpio_40014000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_gpio_40014000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_40014000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_P_ngpios 30
#define DT_N_S_soc_S_gpio_40014000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_P_status "okay"
#define DT_N_S_soc_S_gpio_40014000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_40014000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_40014000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_40014000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_40014000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_40014000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpio_40014000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_40014000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40014000, status, 0)
#define DT_N_S_soc_S_gpio_40014000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40014000, status, 0)
#define DT_N_S_soc_S_gpio_40014000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40014000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40014000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40014000_P_status_LEN 1
#define DT_N_S_soc_S_gpio_40014000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_P_compatible {"raspberrypi,pico-gpio"}
#define DT_N_S_soc_S_gpio_40014000_P_compatible_IDX_0 "raspberrypi,pico-gpio"
#define DT_N_S_soc_S_gpio_40014000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-gpio
#define DT_N_S_soc_S_gpio_40014000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_gpio
#define DT_N_S_soc_S_gpio_40014000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_GPIO
#define DT_N_S_soc_S_gpio_40014000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_40014000, compatible, 0)
#define DT_N_S_soc_S_gpio_40014000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_40014000, compatible, 0)
#define DT_N_S_soc_S_gpio_40014000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_40014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40014000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_40014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_40014000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_40014000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_P_interrupts {13 /* 0xd */, 3 /* 0x3 */}
#define DT_N_S_soc_S_gpio_40014000_P_interrupts_IDX_0 13
#define DT_N_S_soc_S_gpio_40014000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_gpio_40014000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_40014000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_40014000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_40014000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /leds/led_0
 *
 * Node identifier: DT_N_S_leds_S_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_0_PATH "/leds/led_0"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_0_FULL_NAME "led_0"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_0_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_0_ORD 16
#define DT_N_S_leds_S_led_0_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_0_REQUIRES_ORDS \
	14, /* /leds */ \
	15, /* /soc/gpio@40014000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_0_EXISTS 1
#define DT_N_ALIAS_led0     DT_N_S_leds_S_led_0
#define DT_N_NODELABEL_led0 DT_N_S_leds_S_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_0_REG_NUM 0
#define DT_N_S_leds_S_led_0_RANGES_NUM 0
#define DT_N_S_leds_S_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_0_IRQ_NUM 0
#define DT_N_S_leds_S_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_40014000
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin 25
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_LEN 1
#define DT_N_S_leds_S_led_0_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label "LED"
#define DT_N_S_leds_S_led_0_P_label_STRING_UNQUOTED LED
#define DT_N_S_leds_S_led_0_P_label_STRING_TOKEN LED
#define DT_N_S_leds_S_led_0_P_label_STRING_UPPER_TOKEN LED
#define DT_N_S_leds_S_led_0_P_label_IDX_0 "LED"
#define DT_N_S_leds_S_led_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, label, 0)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, label, 0)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_LEN 1
#define DT_N_S_leds_S_led_0_P_label_EXISTS 1

/*
 * Devicetree node: /pin-controller/adc_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_adc_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_PATH "/pin-controller/adc_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/adc_default) identifier: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_PARENT DT_N_S_pin_controller_S_adc_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_ORD 17
#define DT_N_S_pin_controller_S_adc_default_S_group1_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_REQUIRES_ORDS \
	6, /* /pin-controller/adc_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_adc_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux {431 /* 0x1af */, 447 /* 0x1bf */, 463 /* 0x1cf */, 479 /* 0x1df */}
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_IDX_0 431
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_IDX_1 447
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_IDX_2 463
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_IDX_3 479
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 1) \
	fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 2) \
	fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 3)
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 3)
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 3, __VA_ARGS__)
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_adc_default_S_group1, pinmux, 3, __VA_ARGS__)
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_LEN 4
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_drive_strength 4
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_drive_strength_ENUM_IDX 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_drive_strength_ENUM_VAL_4_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_slew_rate 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_slew_rate_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_input_enable 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_input_schmitt_enable 0
#define DT_N_S_pin_controller_S_adc_default_S_group1_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2c0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_default_PATH "/pin-controller/i2c0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_default_FULL_NAME "i2c0_default"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_i2c0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_default_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_default_ORD 18
#define DT_N_S_pin_controller_S_i2c0_default_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_default_REQUIRES_ORDS \
	5, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_default_SUPPORTS_ORDS \
	19, /* /pin-controller/i2c0_default/group1 */ \
	33, /* /soc/i2c@40044000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_default_EXISTS 1
#define DT_N_NODELABEL_i2c0_default DT_N_S_pin_controller_S_i2c0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/i2c0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PATH "/pin-controller/i2c0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/i2c0_default) identifier: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PARENT DT_N_S_pin_controller_S_i2c0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_ORD 19
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_REQUIRES_ORDS \
	18, /* /pin-controller/i2c0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux {67 /* 0x43 */, 83 /* 0x53 */}
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_IDX_0 67
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_IDX_1 83
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 1)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 1)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_drive_strength 4
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_drive_strength_ENUM_IDX 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_drive_strength_ENUM_VAL_4_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_slew_rate 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_slew_rate_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_input_enable 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_input_schmitt_enable 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/pwm_ch4b_default
 *
 * Node identifier: DT_N_S_pin_controller_S_pwm_ch4b_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_PATH "/pin-controller/pwm_ch4b_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FULL_NAME "pwm_ch4b_default"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_ORD 20
#define DT_N_S_pin_controller_S_pwm_ch4b_default_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_REQUIRES_ORDS \
	5, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_SUPPORTS_ORDS \
	21, /* /pin-controller/pwm_ch4b_default/group1 */ \
	30, /* /soc/pwm@40050000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_EXISTS 1
#define DT_N_NODELABEL_pwm_ch4b_default DT_N_S_pin_controller_S_pwm_ch4b_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_REG_NUM 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/pwm_ch4b_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_PATH "/pin-controller/pwm_ch4b_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/pwm_ch4b_default) identifier: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_PARENT DT_N_S_pin_controller_S_pwm_ch4b_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_ORD 21
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_REQUIRES_ORDS \
	20, /* /pin-controller/pwm_ch4b_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_pinmux {404 /* 0x194 */}
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_pinmux_IDX_0 404
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_drive_strength 4
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_drive_strength_ENUM_IDX 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_drive_strength_ENUM_VAL_4_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_slew_rate 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_slew_rate_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_input_schmitt_enable 0
#define DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/spi0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_spi0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spi0_default_PATH "/pin-controller/spi0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spi0_default_FULL_NAME "spi0_default"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_spi0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spi0_default_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_spi0_default_S_group1) fn(DT_N_S_pin_controller_S_spi0_default_S_group2)
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi0_default_S_group2)
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_spi0_default_S_group1) fn(DT_N_S_pin_controller_S_spi0_default_S_group2)
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi0_default_S_group2)
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spi0_default_S_group2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spi0_default_ORD 22
#define DT_N_S_pin_controller_S_spi0_default_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spi0_default_REQUIRES_ORDS \
	5, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spi0_default_SUPPORTS_ORDS \
	23, /* /pin-controller/spi0_default/group1 */ \
	24, /* /pin-controller/spi0_default/group2 */ \
	39, /* /soc/spi@4003c000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spi0_default_EXISTS 1
#define DT_N_NODELABEL_spi0_default DT_N_S_pin_controller_S_spi0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spi0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_spi0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spi0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spi0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spi0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spi0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/spi0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_spi0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_PATH "/pin-controller/spi0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/spi0_default) identifier: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_PARENT DT_N_S_pin_controller_S_spi0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_ORD 23
#define DT_N_S_pin_controller_S_spi0_default_S_group1_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_REQUIRES_ORDS \
	22, /* /pin-controller/spi0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spi0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_pinmux {273 /* 0x111 */, 289 /* 0x121 */, 305 /* 0x131 */}
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_pinmux_IDX_0 273
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_pinmux_IDX_1 289
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_pinmux_IDX_2 305
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_spi0_default_S_group1, pinmux, 1) \
	fn(DT_N_S_pin_controller_S_spi0_default_S_group1, pinmux, 2)
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi0_default_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi0_default_S_group1, pinmux, 2)
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spi0_default_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spi0_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi0_default_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spi0_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_pinmux_LEN 3
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_drive_strength 4
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_drive_strength_ENUM_IDX 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_drive_strength_ENUM_VAL_4_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_slew_rate 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_slew_rate_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_input_schmitt_enable 0
#define DT_N_S_pin_controller_S_spi0_default_S_group1_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/spi0_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_spi0_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spi0_default_S_group2_PATH "/pin-controller/spi0_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spi0_default_S_group2_FULL_NAME "group2"

/* Node parent (/pin-controller/spi0_default) identifier: */
#define DT_N_S_pin_controller_S_spi0_default_S_group2_PARENT DT_N_S_pin_controller_S_spi0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spi0_default_S_group2_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spi0_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spi0_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi0_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi0_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spi0_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spi0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spi0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spi0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spi0_default_S_group2_ORD 24
#define DT_N_S_pin_controller_S_spi0_default_S_group2_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spi0_default_S_group2_REQUIRES_ORDS \
	22, /* /pin-controller/spi0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spi0_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spi0_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spi0_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_spi0_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spi0_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spi0_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spi0_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spi0_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_pinmux {257 /* 0x101 */}
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_pinmux_IDX_0 257
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spi0_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spi0_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spi0_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spi0_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_drive_strength 4
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_drive_strength_ENUM_IDX 1
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_drive_strength_ENUM_VAL_4_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_drive_strength_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_slew_rate 0
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_slew_rate_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_slew_rate_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_input_enable 1
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_input_schmitt_enable 0
#define DT_N_S_pin_controller_S_spi0_default_S_group2_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_PATH "/pin-controller/uart0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME "uart0_default"

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_ORD 25
#define DT_N_S_pin_controller_S_uart0_default_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_REQUIRES_ORDS \
	5, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_SUPPORTS_ORDS \
	26, /* /pin-controller/uart0_default/group1 */ \
	27, /* /pin-controller/uart0_default/group2 */ \
	44, /* /soc/uart@40034000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_EXISTS 1
#define DT_N_NODELABEL_uart0_default DT_N_S_pin_controller_S_uart0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/uart0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PATH "/pin-controller/uart0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME "group1"

/* Node parent (/pin-controller/uart0_default) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PARENT DT_N_S_pin_controller_S_uart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_ORD 26
#define DT_N_S_pin_controller_S_uart0_default_S_group1_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_REQUIRES_ORDS \
	25, /* /pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux {2 /* 0x2 */}
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_IDX_0 2
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_drive_strength 4
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_drive_strength_ENUM_IDX 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_drive_strength_ENUM_VAL_4_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_drive_strength_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_slew_rate 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_slew_rate_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_slew_rate_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_input_schmitt_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PATH "/pin-controller/uart0_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FULL_NAME "group2"

/* Node parent (/pin-controller/uart0_default) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PARENT DT_N_S_pin_controller_S_uart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_ORD 27
#define DT_N_S_pin_controller_S_uart0_default_S_group2_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_REQUIRES_ORDS \
	25, /* /pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux {18 /* 0x12 */}
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_IDX_0 18
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_drive_strength 4
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_drive_strength_ENUM_IDX 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_drive_strength_ENUM_VAL_4_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_drive_strength_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_slew_rate 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_slew_rate_ENUM_IDX 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_slew_rate_ENUM_VAL_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_slew_rate_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_input_enable 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_input_schmitt_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_input_schmitt_enable_EXISTS 1

/*
 * Devicetree node: /pwm_leds
 *
 * Node identifier: DT_N_S_pwm_leds
 *
 * Binding (compatible = pwm-leds):
 *   $ZEPHYR_BASE\dts\bindings\led\pwm-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwm_leds_PATH "/pwm_leds"

/* Node's name with unit-address: */
#define DT_N_S_pwm_leds_FULL_NAME "pwm_leds"

/* Node parent (/) identifier: */
#define DT_N_S_pwm_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pwm_leds_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwm_leds_FOREACH_CHILD(fn) fn(DT_N_S_pwm_leds_S_pwm_led_0)
#define DT_N_S_pwm_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pwm_leds_S_pwm_led_0)
#define DT_N_S_pwm_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pwm_leds_S_pwm_led_0, __VA_ARGS__)
#define DT_N_S_pwm_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwm_leds_S_pwm_led_0, __VA_ARGS__)
#define DT_N_S_pwm_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pwm_leds_S_pwm_led_0)
#define DT_N_S_pwm_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pwm_leds_S_pwm_led_0)
#define DT_N_S_pwm_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pwm_leds_S_pwm_led_0, __VA_ARGS__)
#define DT_N_S_pwm_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwm_leds_S_pwm_led_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pwm_leds_ORD 28
#define DT_N_S_pwm_leds_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwm_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwm_leds_SUPPORTS_ORDS \
	31, /* /pwm_leds/pwm_led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_pwm_leds_EXISTS 1
#define DT_N_INST_0_pwm_leds DT_N_S_pwm_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwm_leds_REG_NUM 0
#define DT_N_S_pwm_leds_RANGES_NUM 0
#define DT_N_S_pwm_leds_FOREACH_RANGE(fn) 
#define DT_N_S_pwm_leds_IRQ_NUM 0
#define DT_N_S_pwm_leds_COMPAT_MATCHES_pwm_leds 1
#define DT_N_S_pwm_leds_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwm_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwm_leds_P_compatible {"pwm-leds"}
#define DT_N_S_pwm_leds_P_compatible_IDX_0 "pwm-leds"
#define DT_N_S_pwm_leds_P_compatible_IDX_0_STRING_UNQUOTED pwm-leds
#define DT_N_S_pwm_leds_P_compatible_IDX_0_STRING_TOKEN pwm_leds
#define DT_N_S_pwm_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN PWM_LEDS
#define DT_N_S_pwm_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pwm_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwm_leds, compatible, 0)
#define DT_N_S_pwm_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwm_leds, compatible, 0)
#define DT_N_S_pwm_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwm_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_pwm_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwm_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_pwm_leds_P_compatible_LEN 1
#define DT_N_S_pwm_leds_P_compatible_EXISTS 1
#define DT_N_S_pwm_leds_P_status "disabled"
#define DT_N_S_pwm_leds_P_status_STRING_UNQUOTED disabled
#define DT_N_S_pwm_leds_P_status_STRING_TOKEN disabled
#define DT_N_S_pwm_leds_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_pwm_leds_P_status_IDX_0 "disabled"
#define DT_N_S_pwm_leds_P_status_IDX_0_EXISTS 1
#define DT_N_S_pwm_leds_P_status_ENUM_IDX 2
#define DT_N_S_pwm_leds_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_pwm_leds_P_status_ENUM_TOKEN disabled
#define DT_N_S_pwm_leds_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_pwm_leds_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwm_leds, status, 0)
#define DT_N_S_pwm_leds_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwm_leds, status, 0)
#define DT_N_S_pwm_leds_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwm_leds, status, 0, __VA_ARGS__)
#define DT_N_S_pwm_leds_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwm_leds, status, 0, __VA_ARGS__)
#define DT_N_S_pwm_leds_P_status_LEN 1
#define DT_N_S_pwm_leds_P_status_EXISTS 1

/*
 * Devicetree node: /soc/system-clk
 *
 * Node identifier: DT_N_S_soc_S_system_clk
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_system_clk_PATH "/soc/system-clk"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_system_clk_FULL_NAME "system-clk"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_system_clk_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_system_clk_CHILD_IDX 5

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_system_clk_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_system_clk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_system_clk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_system_clk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_system_clk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_system_clk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_system_clk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_system_clk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_system_clk_ORD 29
#define DT_N_S_soc_S_system_clk_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_system_clk_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_system_clk_SUPPORTS_ORDS \
	30, /* /soc/pwm@40050000 */ \
	32, /* /soc/dma@50000000 */ \
	33, /* /soc/i2c@40044000 */ \
	34, /* /soc/i2c@40048000 */ \
	36, /* /soc/pio@50200000 */ \
	37, /* /soc/pio@50300000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_system_clk_EXISTS 1
#define DT_N_INST_1_fixed_clock   DT_N_S_soc_S_system_clk
#define DT_N_NODELABEL_system_clk DT_N_S_soc_S_system_clk

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_system_clk_REG_NUM 0
#define DT_N_S_soc_S_system_clk_RANGES_NUM 0
#define DT_N_S_soc_S_system_clk_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_system_clk_IRQ_NUM 0
#define DT_N_S_soc_S_system_clk_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_soc_S_system_clk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_system_clk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_system_clk_P_clock_frequency 125000000
#define DT_N_S_soc_S_system_clk_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /soc/pwm@40050000
 *
 * Node identifier: DT_N_S_soc_S_pwm_40050000
 *
 * Binding (compatible = raspberrypi,pico-pwm):
 *   $ZEPHYR_BASE\dts\bindings\pwm\raspberrypi,pico-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pwm_40050000_PATH "/soc/pwm@40050000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pwm_40050000_FULL_NAME "pwm@40050000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pwm_40050000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pwm_40050000_CHILD_IDX 17

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pwm_40050000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pwm_40050000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40050000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40050000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pwm_40050000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pwm_40050000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pwm_40050000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pwm_40050000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pwm_40050000_ORD 30
#define DT_N_S_soc_S_pwm_40050000_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pwm_40050000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/reset-controller@4000c000 */ \
	20, /* /pin-controller/pwm_ch4b_default */ \
	29, /* /soc/system-clk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pwm_40050000_SUPPORTS_ORDS \
	31, /* /pwm_leds/pwm_led_0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pwm_40050000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_pwm DT_N_S_soc_S_pwm_40050000
#define DT_N_NODELABEL_pwm               DT_N_S_soc_S_pwm_40050000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pwm_40050000_REG_NUM 1
#define DT_N_S_soc_S_pwm_40050000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_REG_IDX_0_VAL_ADDRESS 1074069504 /* 0x40050000 */
#define DT_N_S_soc_S_pwm_40050000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pwm_40050000_RANGES_NUM 0
#define DT_N_S_soc_S_pwm_40050000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pwm_40050000_IRQ_NUM 1
#define DT_N_S_soc_S_pwm_40050000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_pwm_40050000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_pwm_40050000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_IRQ_NAME_pwm_irq_wrap_VAL_irq DT_N_S_soc_S_pwm_40050000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_pwm_40050000_IRQ_NAME_pwm_irq_wrap_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_IRQ_NAME_pwm_irq_wrap_VAL_priority DT_N_S_soc_S_pwm_40050000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_pwm_40050000_IRQ_NAME_pwm_irq_wrap_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_COMPAT_MATCHES_raspberrypi_pico_pwm 1
#define DT_N_S_soc_S_pwm_40050000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_pwm_40050000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_COMPAT_MODEL_IDX_0 "pico-pwm"
#define DT_N_S_soc_S_pwm_40050000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pwm_40050000_PINCTRL_NUM 1
#define DT_N_S_soc_S_pwm_40050000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_pwm_40050000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_pwm_40050000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_pwm_40050000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_pwm_ch4b_default

/* Generic property macros: */
#define DT_N_S_soc_S_pwm_40050000_P_reg {1074069504 /* 0x40050000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pwm_40050000_P_reg_IDX_0 1074069504
#define DT_N_S_soc_S_pwm_40050000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pwm_40050000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_interrupts {4 /* 0x4 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_pwm_40050000_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_pwm_40050000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_pwm_40050000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_int_0 255
#define DT_N_S_soc_S_pwm_40050000_P_divider_int_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_frac_0 0
#define DT_N_S_soc_S_pwm_40050000_P_divider_frac_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_int_1 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_int_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_frac_1 0
#define DT_N_S_soc_S_pwm_40050000_P_divider_frac_1_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_int_2 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_int_2_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_frac_2 0
#define DT_N_S_soc_S_pwm_40050000_P_divider_frac_2_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_int_3 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_int_3_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_frac_3 0
#define DT_N_S_soc_S_pwm_40050000_P_divider_frac_3_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_int_4 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_int_4_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_frac_4 0
#define DT_N_S_soc_S_pwm_40050000_P_divider_frac_4_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_int_5 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_int_5_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_frac_5 0
#define DT_N_S_soc_S_pwm_40050000_P_divider_frac_5_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_int_6 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_int_6_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_frac_6 0
#define DT_N_S_soc_S_pwm_40050000_P_divider_frac_6_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_int_7 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_int_7_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_divider_frac_7 0
#define DT_N_S_soc_S_pwm_40050000_P_divider_frac_7_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_pwm_ch4b_default
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_pwm_ch4b_default
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40050000, pinctrl_0, 0)
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40050000, pinctrl_0, 0)
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40050000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40050000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40050000, pinctrl_names, 0)
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40050000, pinctrl_names, 0)
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40050000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40050000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_pwm_40050000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_4000c000
#define DT_N_S_soc_S_pwm_40050000_P_resets_IDX_0_VAL_id 14
#define DT_N_S_soc_S_pwm_40050000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40050000, resets, 0)
#define DT_N_S_soc_S_pwm_40050000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40050000, resets, 0)
#define DT_N_S_soc_S_pwm_40050000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40050000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40050000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40050000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40050000_P_resets_LEN 1
#define DT_N_S_soc_S_pwm_40050000_P_resets_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_status "disabled"
#define DT_N_S_soc_S_pwm_40050000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pwm_40050000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pwm_40050000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40050000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pwm_40050000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pwm_40050000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pwm_40050000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pwm_40050000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40050000, status, 0)
#define DT_N_S_soc_S_pwm_40050000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40050000, status, 0)
#define DT_N_S_soc_S_pwm_40050000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40050000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40050000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40050000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40050000_P_status_LEN 1
#define DT_N_S_soc_S_pwm_40050000_P_status_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_compatible {"raspberrypi,pico-pwm"}
#define DT_N_S_soc_S_pwm_40050000_P_compatible_IDX_0 "raspberrypi,pico-pwm"
#define DT_N_S_soc_S_pwm_40050000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-pwm
#define DT_N_S_soc_S_pwm_40050000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_pwm
#define DT_N_S_soc_S_pwm_40050000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_PWM
#define DT_N_S_soc_S_pwm_40050000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40050000, compatible, 0)
#define DT_N_S_soc_S_pwm_40050000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40050000, compatible, 0)
#define DT_N_S_soc_S_pwm_40050000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40050000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40050000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40050000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40050000_P_compatible_LEN 1
#define DT_N_S_soc_S_pwm_40050000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_interrupt_names {"PWM_IRQ_WRAP"}
#define DT_N_S_soc_S_pwm_40050000_P_interrupt_names_IDX_0 "PWM_IRQ_WRAP"
#define DT_N_S_soc_S_pwm_40050000_P_interrupt_names_IDX_0_STRING_UNQUOTED PWM_IRQ_WRAP
#define DT_N_S_soc_S_pwm_40050000_P_interrupt_names_IDX_0_STRING_TOKEN PWM_IRQ_WRAP
#define DT_N_S_soc_S_pwm_40050000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN PWM_IRQ_WRAP
#define DT_N_S_soc_S_pwm_40050000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40050000, interrupt_names, 0)
#define DT_N_S_soc_S_pwm_40050000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40050000, interrupt_names, 0)
#define DT_N_S_soc_S_pwm_40050000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40050000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40050000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40050000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40050000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_pwm_40050000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_clocks_IDX_0_PH DT_N_S_soc_S_system_clk
#define DT_N_S_soc_S_pwm_40050000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pwm_40050000, clocks, 0)
#define DT_N_S_soc_S_pwm_40050000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pwm_40050000, clocks, 0)
#define DT_N_S_soc_S_pwm_40050000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pwm_40050000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40050000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pwm_40050000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pwm_40050000_P_clocks_LEN 1
#define DT_N_S_soc_S_pwm_40050000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_wakeup_source 0
#define DT_N_S_soc_S_pwm_40050000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pwm_40050000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pwm_40050000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /pwm_leds/pwm_led_0
 *
 * Node identifier: DT_N_S_pwm_leds_S_pwm_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pwm_leds_S_pwm_led_0_PATH "/pwm_leds/pwm_led_0"

/* Node's name with unit-address: */
#define DT_N_S_pwm_leds_S_pwm_led_0_FULL_NAME "pwm_led_0"

/* Node parent (/pwm_leds) identifier: */
#define DT_N_S_pwm_leds_S_pwm_led_0_PARENT DT_N_S_pwm_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_pwm_leds_S_pwm_led_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_pwm_leds_S_pwm_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_pwm_leds_S_pwm_led_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pwm_leds_S_pwm_led_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pwm_leds_S_pwm_led_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pwm_leds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pwm_leds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pwm_leds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pwm_leds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pwm_leds_S_pwm_led_0_ORD 31
#define DT_N_S_pwm_leds_S_pwm_led_0_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pwm_leds_S_pwm_led_0_REQUIRES_ORDS \
	28, /* /pwm_leds */ \
	30, /* /soc/pwm@40050000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pwm_leds_S_pwm_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pwm_leds_S_pwm_led_0_EXISTS 1
#define DT_N_ALIAS_pwm_led0     DT_N_S_pwm_leds_S_pwm_led_0
#define DT_N_NODELABEL_pwm_led0 DT_N_S_pwm_leds_S_pwm_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_pwm_leds_S_pwm_led_0_REG_NUM 0
#define DT_N_S_pwm_leds_S_pwm_led_0_RANGES_NUM 0
#define DT_N_S_pwm_leds_S_pwm_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_pwm_leds_S_pwm_led_0_IRQ_NUM 0
#define DT_N_S_pwm_leds_S_pwm_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pwm_leds_S_pwm_led_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pwm_leds_S_pwm_led_0_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_0_P_pwms_IDX_0_PH DT_N_S_soc_S_pwm_40050000
#define DT_N_S_pwm_leds_S_pwm_led_0_P_pwms_IDX_0_VAL_channel 9
#define DT_N_S_pwm_leds_S_pwm_led_0_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_0_P_pwms_IDX_0_VAL_period 20000000
#define DT_N_S_pwm_leds_S_pwm_led_0_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_0_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_pwm_leds_S_pwm_led_0_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwm_leds_S_pwm_led_0, pwms, 0)
#define DT_N_S_pwm_leds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwm_leds_S_pwm_led_0, pwms, 0)
#define DT_N_S_pwm_leds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwm_leds_S_pwm_led_0, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwm_leds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwm_leds_S_pwm_led_0, pwms, 0, __VA_ARGS__)
#define DT_N_S_pwm_leds_S_pwm_led_0_P_pwms_LEN 1
#define DT_N_S_pwm_leds_S_pwm_led_0_P_pwms_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_0_P_label "PWM_LED"
#define DT_N_S_pwm_leds_S_pwm_led_0_P_label_STRING_UNQUOTED PWM_LED
#define DT_N_S_pwm_leds_S_pwm_led_0_P_label_STRING_TOKEN PWM_LED
#define DT_N_S_pwm_leds_S_pwm_led_0_P_label_STRING_UPPER_TOKEN PWM_LED
#define DT_N_S_pwm_leds_S_pwm_led_0_P_label_IDX_0 "PWM_LED"
#define DT_N_S_pwm_leds_S_pwm_led_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_pwm_leds_S_pwm_led_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pwm_leds_S_pwm_led_0, label, 0)
#define DT_N_S_pwm_leds_S_pwm_led_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pwm_leds_S_pwm_led_0, label, 0)
#define DT_N_S_pwm_leds_S_pwm_led_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pwm_leds_S_pwm_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_pwm_leds_S_pwm_led_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pwm_leds_S_pwm_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_pwm_leds_S_pwm_led_0_P_label_LEN 1
#define DT_N_S_pwm_leds_S_pwm_led_0_P_label_EXISTS 1

/*
 * Devicetree node: /soc/dma@50000000
 *
 * Node identifier: DT_N_S_soc_S_dma_50000000
 *
 * Binding (compatible = raspberrypi,pico-dma):
 *   $ZEPHYR_BASE\dts\bindings\dma\raspberrypi,pico-dma.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_50000000_PATH "/soc/dma@50000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_50000000_FULL_NAME "dma@50000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_50000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_50000000_CHILD_IDX 19

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_50000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_50000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_50000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_50000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_50000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_50000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_50000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_50000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_50000000_ORD 32
#define DT_N_S_soc_S_dma_50000000_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_50000000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/reset-controller@4000c000 */ \
	29, /* /soc/system-clk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_50000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_50000000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_dma DT_N_S_soc_S_dma_50000000
#define DT_N_NODELABEL_dma               DT_N_S_soc_S_dma_50000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_50000000_REG_NUM 1
#define DT_N_S_soc_S_dma_50000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_REG_IDX_0_VAL_ADDRESS 1342177280 /* 0x50000000 */
#define DT_N_S_soc_S_dma_50000000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_dma_50000000_RANGES_NUM 0
#define DT_N_S_soc_S_dma_50000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_50000000_IRQ_NUM 2
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_1_VAL_irq 12
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_1_VAL_priority 3
#define DT_N_S_soc_S_dma_50000000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma0_VAL_irq DT_N_S_soc_S_dma_50000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma0_VAL_priority DT_N_S_soc_S_dma_50000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma1_VAL_irq DT_N_S_soc_S_dma_50000000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma1_VAL_priority DT_N_S_soc_S_dma_50000000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_dma_50000000_IRQ_NAME_dma1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_COMPAT_MATCHES_raspberrypi_pico_dma 1
#define DT_N_S_soc_S_dma_50000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_dma_50000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_COMPAT_MODEL_IDX_0 "pico-dma"
#define DT_N_S_soc_S_dma_50000000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_50000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_50000000_P_reg {1342177280 /* 0x50000000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_dma_50000000_P_reg_IDX_0 1342177280
#define DT_N_S_soc_S_dma_50000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_dma_50000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupts {11 /* 0xb */, 3 /* 0x3 */, 12 /* 0xc */, 3 /* 0x3 */}
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_2 12
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_3 3
#define DT_N_S_soc_S_dma_50000000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_dma_channels 12
#define DT_N_S_soc_S_dma_50000000_P_dma_channels_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels {0 /* 0x0 */, 2 /* 0x2 */, 4 /* 0x4 */, 8 /* 0x8 */, 10 /* 0xa */, 12 /* 0xc */, 14 /* 0xe */, 16 /* 0x10 */, 18 /* 0x12 */, 20 /* 0x14 */, 22 /* 0x16 */, 24 /* 0x18 */, 26 /* 0x1a */, 28 /* 0x1c */, 30 /* 0x1e */}
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_0 0
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_1 2
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_2 4
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_3 8
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_4 10
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_5 12
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_6 14
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_7 16
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_8 18
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_9 20
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_10 22
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_11 24
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_12 26
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_13 28
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_14 30
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 0) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 1) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 2) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 3) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 4) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 5) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 6) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 7) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 8) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 9) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 10) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 11) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 12) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 13) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 14)
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 5) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 6) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 7) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 8) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 9) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 10) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 11) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 12) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 13) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 14)
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 14, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 5, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 6, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 7, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 8, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 9, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 10, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 11, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 12, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 13, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, irq0_channels, 14, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_LEN 15
#define DT_N_S_soc_S_dma_50000000_P_irq0_channels_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_status "disabled"
#define DT_N_S_soc_S_dma_50000000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_dma_50000000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dma_50000000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_50000000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_dma_50000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dma_50000000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dma_50000000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_50000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_50000000, status, 0)
#define DT_N_S_soc_S_dma_50000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_50000000, status, 0)
#define DT_N_S_soc_S_dma_50000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_50000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_50000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_status_LEN 1
#define DT_N_S_soc_S_dma_50000000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_compatible {"raspberrypi,pico-dma"}
#define DT_N_S_soc_S_dma_50000000_P_compatible_IDX_0 "raspberrypi,pico-dma"
#define DT_N_S_soc_S_dma_50000000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-dma
#define DT_N_S_soc_S_dma_50000000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_dma
#define DT_N_S_soc_S_dma_50000000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_DMA
#define DT_N_S_soc_S_dma_50000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_50000000, compatible, 0)
#define DT_N_S_soc_S_dma_50000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_50000000, compatible, 0)
#define DT_N_S_soc_S_dma_50000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_50000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names {"dma0", "dma1"}
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_0 "dma0"
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_0_STRING_UNQUOTED dma0
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_0_STRING_TOKEN dma0
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN DMA0
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_1 "dma1"
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_1_STRING_UNQUOTED dma1
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_1_STRING_TOKEN dma1
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN DMA1
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 1)
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 1)
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_dma_50000000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_dma_50000000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_clocks_IDX_0_PH DT_N_S_soc_S_system_clk
#define DT_N_S_soc_S_dma_50000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_50000000, clocks, 0)
#define DT_N_S_soc_S_dma_50000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_50000000, clocks, 0)
#define DT_N_S_soc_S_dma_50000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_50000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_50000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_50000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_wakeup_source 0
#define DT_N_S_soc_S_dma_50000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dma_50000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_4000c000
#define DT_N_S_soc_S_dma_50000000_P_resets_IDX_0_VAL_id 2
#define DT_N_S_soc_S_dma_50000000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_dma_50000000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_50000000, resets, 0)
#define DT_N_S_soc_S_dma_50000000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_50000000, resets, 0)
#define DT_N_S_soc_S_dma_50000000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_50000000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_50000000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_50000000_P_resets_LEN 1
#define DT_N_S_soc_S_dma_50000000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40044000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40044000
 *
 * Binding (compatible = raspberrypi,pico-i2c):
 *   $ZEPHYR_BASE\dts\bindings\i2c\raspberrypi,pico-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40044000_PATH "/soc/i2c@40044000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40044000_FULL_NAME "i2c@40044000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40044000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40044000_CHILD_IDX 13

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40044000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40044000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40044000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40044000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40044000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40044000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40044000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40044000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40044000_ORD 33
#define DT_N_S_soc_S_i2c_40044000_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40044000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/reset-controller@4000c000 */ \
	18, /* /pin-controller/i2c0_default */ \
	29, /* /soc/system-clk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40044000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40044000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_i2c DT_N_S_soc_S_i2c_40044000
#define DT_N_INST_0_snps_designware_i2c  DT_N_S_soc_S_i2c_40044000
#define DT_N_NODELABEL_i2c0              DT_N_S_soc_S_i2c_40044000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40044000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40044000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_REG_IDX_0_VAL_ADDRESS 1074020352 /* 0x40044000 */
#define DT_N_S_soc_S_i2c_40044000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_40044000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40044000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40044000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40044000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_IRQ_IDX_0_VAL_irq 23
#define DT_N_S_soc_S_i2c_40044000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_i2c_40044000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_IRQ_NAME_i2c0_VAL_irq DT_N_S_soc_S_i2c_40044000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40044000_IRQ_NAME_i2c0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_IRQ_NAME_i2c0_VAL_priority DT_N_S_soc_S_i2c_40044000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40044000_IRQ_NAME_i2c0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_COMPAT_MATCHES_raspberrypi_pico_i2c 1
#define DT_N_S_soc_S_i2c_40044000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_i2c_40044000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_COMPAT_MODEL_IDX_0 "pico-i2c"
#define DT_N_S_soc_S_i2c_40044000_COMPAT_MATCHES_snps_designware_i2c 1
#define DT_N_S_soc_S_i2c_40044000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_COMPAT_VENDOR_IDX_1 "Synopsys, Inc."
#define DT_N_S_soc_S_i2c_40044000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_COMPAT_MODEL_IDX_1 "designware-i2c"
#define DT_N_S_soc_S_i2c_40044000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40044000_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40044000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40044000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40044000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40044000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_i2c0_default

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40044000_P_interrupts {23 /* 0x17 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_i2c_40044000_P_interrupts_IDX_0 23
#define DT_N_S_soc_S_i2c_40044000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_i2c_40044000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_40044000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_status "okay"
#define DT_N_S_soc_S_i2c_40044000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_40044000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40044000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40044000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_40044000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40044000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40044000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40044000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40044000, status, 0)
#define DT_N_S_soc_S_i2c_40044000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40044000, status, 0)
#define DT_N_S_soc_S_i2c_40044000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40044000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40044000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40044000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40044000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40044000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_compatible {"raspberrypi,pico-i2c", "snps,designware-i2c"}
#define DT_N_S_soc_S_i2c_40044000_P_compatible_IDX_0 "raspberrypi,pico-i2c"
#define DT_N_S_soc_S_i2c_40044000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-i2c
#define DT_N_S_soc_S_i2c_40044000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_i2c
#define DT_N_S_soc_S_i2c_40044000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_I2C
#define DT_N_S_soc_S_i2c_40044000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_compatible_IDX_1 "snps,designware-i2c"
#define DT_N_S_soc_S_i2c_40044000_P_compatible_IDX_1_STRING_UNQUOTED snps,designware-i2c
#define DT_N_S_soc_S_i2c_40044000_P_compatible_IDX_1_STRING_TOKEN snps_designware_i2c
#define DT_N_S_soc_S_i2c_40044000_P_compatible_IDX_1_STRING_UPPER_TOKEN SNPS_DESIGNWARE_I2C
#define DT_N_S_soc_S_i2c_40044000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40044000, compatible, 0) \
	fn(DT_N_S_soc_S_i2c_40044000, compatible, 1)
#define DT_N_S_soc_S_i2c_40044000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40044000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40044000, compatible, 1)
#define DT_N_S_soc_S_i2c_40044000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40044000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40044000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40044000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40044000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40044000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40044000_P_compatible_LEN 2
#define DT_N_S_soc_S_i2c_40044000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_reg {1074020352 /* 0x40044000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_40044000_P_reg_IDX_0 1074020352
#define DT_N_S_soc_S_i2c_40044000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_40044000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_interrupt_names {"i2c0"}
#define DT_N_S_soc_S_i2c_40044000_P_interrupt_names_IDX_0 "i2c0"
#define DT_N_S_soc_S_i2c_40044000_P_interrupt_names_IDX_0_STRING_UNQUOTED i2c0
#define DT_N_S_soc_S_i2c_40044000_P_interrupt_names_IDX_0_STRING_TOKEN i2c0
#define DT_N_S_soc_S_i2c_40044000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN I2C0
#define DT_N_S_soc_S_i2c_40044000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40044000, interrupt_names, 0)
#define DT_N_S_soc_S_i2c_40044000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40044000, interrupt_names, 0)
#define DT_N_S_soc_S_i2c_40044000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40044000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40044000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40044000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40044000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_i2c_40044000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_clocks_IDX_0_PH DT_N_S_soc_S_system_clk
#define DT_N_S_soc_S_i2c_40044000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40044000, clocks, 0)
#define DT_N_S_soc_S_i2c_40044000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40044000, clocks, 0)
#define DT_N_S_soc_S_i2c_40044000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40044000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40044000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40044000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40044000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40044000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40044000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40044000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_i2c0_default
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_i2c0_default
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40044000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40044000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40044000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40044000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40044000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40044000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40044000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40044000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40044000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_4000c000
#define DT_N_S_soc_S_i2c_40044000_P_resets_IDX_0_VAL_id 3
#define DT_N_S_soc_S_i2c_40044000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_i2c_40044000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40044000, resets, 0)
#define DT_N_S_soc_S_i2c_40044000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40044000, resets, 0)
#define DT_N_S_soc_S_i2c_40044000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40044000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40044000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40044000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40044000_P_resets_LEN 1
#define DT_N_S_soc_S_i2c_40044000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40048000
 *
 * Node identifier: DT_N_S_soc_S_i2c_40048000
 *
 * Binding (compatible = raspberrypi,pico-i2c):
 *   $ZEPHYR_BASE\dts\bindings\i2c\raspberrypi,pico-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40048000_PATH "/soc/i2c@40048000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40048000_FULL_NAME "i2c@40048000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40048000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40048000_CHILD_IDX 14

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_40048000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40048000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40048000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40048000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_40048000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40048000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_40048000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40048000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40048000_ORD 34
#define DT_N_S_soc_S_i2c_40048000_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40048000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/reset-controller@4000c000 */ \
	29, /* /soc/system-clk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40048000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40048000_EXISTS 1
#define DT_N_INST_1_raspberrypi_pico_i2c DT_N_S_soc_S_i2c_40048000
#define DT_N_INST_1_snps_designware_i2c  DT_N_S_soc_S_i2c_40048000
#define DT_N_NODELABEL_i2c1              DT_N_S_soc_S_i2c_40048000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40048000_REG_NUM 1
#define DT_N_S_soc_S_i2c_40048000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_REG_IDX_0_VAL_ADDRESS 1074036736 /* 0x40048000 */
#define DT_N_S_soc_S_i2c_40048000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_40048000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40048000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40048000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_40048000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_i2c_40048000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_i2c_40048000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_IRQ_NAME_i2c1_VAL_irq DT_N_S_soc_S_i2c_40048000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40048000_IRQ_NAME_i2c1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_IRQ_NAME_i2c1_VAL_priority DT_N_S_soc_S_i2c_40048000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40048000_IRQ_NAME_i2c1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_COMPAT_MATCHES_raspberrypi_pico_i2c 1
#define DT_N_S_soc_S_i2c_40048000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_i2c_40048000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_COMPAT_MODEL_IDX_0 "pico-i2c"
#define DT_N_S_soc_S_i2c_40048000_COMPAT_MATCHES_snps_designware_i2c 1
#define DT_N_S_soc_S_i2c_40048000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_COMPAT_VENDOR_IDX_1 "Synopsys, Inc."
#define DT_N_S_soc_S_i2c_40048000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_COMPAT_MODEL_IDX_1 "designware-i2c"
#define DT_N_S_soc_S_i2c_40048000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40048000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40048000_P_interrupts {24 /* 0x18 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_i2c_40048000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_i2c_40048000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_i2c_40048000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_status "disabled"
#define DT_N_S_soc_S_i2c_40048000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_40048000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_40048000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40048000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_40048000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_40048000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_40048000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_40048000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40048000, status, 0)
#define DT_N_S_soc_S_i2c_40048000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40048000, status, 0)
#define DT_N_S_soc_S_i2c_40048000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40048000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40048000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40048000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40048000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_40048000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_compatible {"raspberrypi,pico-i2c", "snps,designware-i2c"}
#define DT_N_S_soc_S_i2c_40048000_P_compatible_IDX_0 "raspberrypi,pico-i2c"
#define DT_N_S_soc_S_i2c_40048000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-i2c
#define DT_N_S_soc_S_i2c_40048000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_i2c
#define DT_N_S_soc_S_i2c_40048000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_I2C
#define DT_N_S_soc_S_i2c_40048000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_compatible_IDX_1 "snps,designware-i2c"
#define DT_N_S_soc_S_i2c_40048000_P_compatible_IDX_1_STRING_UNQUOTED snps,designware-i2c
#define DT_N_S_soc_S_i2c_40048000_P_compatible_IDX_1_STRING_TOKEN snps_designware_i2c
#define DT_N_S_soc_S_i2c_40048000_P_compatible_IDX_1_STRING_UPPER_TOKEN SNPS_DESIGNWARE_I2C
#define DT_N_S_soc_S_i2c_40048000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40048000, compatible, 0) \
	fn(DT_N_S_soc_S_i2c_40048000, compatible, 1)
#define DT_N_S_soc_S_i2c_40048000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40048000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40048000, compatible, 1)
#define DT_N_S_soc_S_i2c_40048000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40048000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40048000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40048000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40048000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2c_40048000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40048000_P_compatible_LEN 2
#define DT_N_S_soc_S_i2c_40048000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_reg {1074036736 /* 0x40048000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_40048000_P_reg_IDX_0 1074036736
#define DT_N_S_soc_S_i2c_40048000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_40048000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_interrupt_names {"i2c1"}
#define DT_N_S_soc_S_i2c_40048000_P_interrupt_names_IDX_0 "i2c1"
#define DT_N_S_soc_S_i2c_40048000_P_interrupt_names_IDX_0_STRING_UNQUOTED i2c1
#define DT_N_S_soc_S_i2c_40048000_P_interrupt_names_IDX_0_STRING_TOKEN i2c1
#define DT_N_S_soc_S_i2c_40048000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN I2C1
#define DT_N_S_soc_S_i2c_40048000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40048000, interrupt_names, 0)
#define DT_N_S_soc_S_i2c_40048000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40048000, interrupt_names, 0)
#define DT_N_S_soc_S_i2c_40048000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40048000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40048000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40048000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40048000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_i2c_40048000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_clocks_IDX_0_PH DT_N_S_soc_S_system_clk
#define DT_N_S_soc_S_i2c_40048000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40048000, clocks, 0)
#define DT_N_S_soc_S_i2c_40048000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40048000, clocks, 0)
#define DT_N_S_soc_S_i2c_40048000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40048000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40048000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40048000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40048000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40048000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40048000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_40048000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_4000c000
#define DT_N_S_soc_S_i2c_40048000_P_resets_IDX_0_VAL_id 3
#define DT_N_S_soc_S_i2c_40048000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_i2c_40048000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40048000, resets, 0)
#define DT_N_S_soc_S_i2c_40048000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_40048000, resets, 0)
#define DT_N_S_soc_S_i2c_40048000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40048000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40048000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_40048000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40048000_P_resets_LEN 1
#define DT_N_S_soc_S_i2c_40048000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/memory@20000000
 *
 * Node identifier: DT_N_S_soc_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE\dts\bindings\sram\mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_20000000_PATH "/soc/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_20000000_FULL_NAME "memory@20000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_20000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_20000000_CHILD_IDX 2

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_20000000_ORD 35
#define DT_N_S_soc_S_memory_20000000_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_20000000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_soc_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_soc_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_20000000_REG_NUM 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_soc_S_memory_20000000_REG_IDX_0_VAL_SIZE 270336 /* 0x42000 */
#define DT_N_S_soc_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 270336 /* 0x42000 */}
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1 270336
#define DT_N_S_soc_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_20000000, compatible, 0)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_20000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_20000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pio@50200000
 *
 * Node identifier: DT_N_S_soc_S_pio_50200000
 *
 * Binding (compatible = raspberrypi,pico-pio):
 *   $ZEPHYR_BASE\dts\bindings\misc\raspberrypi,pico-pio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pio_50200000_PATH "/soc/pio@50200000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pio_50200000_FULL_NAME "pio@50200000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pio_50200000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pio_50200000_CHILD_IDX 21

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pio_50200000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pio_50200000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pio_50200000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pio_50200000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pio_50200000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pio_50200000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pio_50200000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pio_50200000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pio_50200000_ORD 36
#define DT_N_S_soc_S_pio_50200000_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pio_50200000_REQUIRES_ORDS \
	4, /* /soc */ \
	8, /* /soc/reset-controller@4000c000 */ \
	29, /* /soc/system-clk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pio_50200000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pio_50200000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_pio DT_N_S_soc_S_pio_50200000
#define DT_N_NODELABEL_pio0              DT_N_S_soc_S_pio_50200000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pio_50200000_REG_NUM 1
#define DT_N_S_soc_S_pio_50200000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_REG_IDX_0_VAL_ADDRESS 1344274432 /* 0x50200000 */
#define DT_N_S_soc_S_pio_50200000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pio_50200000_RANGES_NUM 0
#define DT_N_S_soc_S_pio_50200000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pio_50200000_IRQ_NUM 0
#define DT_N_S_soc_S_pio_50200000_COMPAT_MATCHES_raspberrypi_pico_pio 1
#define DT_N_S_soc_S_pio_50200000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_pio_50200000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_COMPAT_MODEL_IDX_0 "pico-pio"
#define DT_N_S_soc_S_pio_50200000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pio_50200000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pio_50200000_P_status "disabled"
#define DT_N_S_soc_S_pio_50200000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pio_50200000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pio_50200000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pio_50200000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pio_50200000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pio_50200000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pio_50200000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pio_50200000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50200000, status, 0)
#define DT_N_S_soc_S_pio_50200000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50200000, status, 0)
#define DT_N_S_soc_S_pio_50200000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50200000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50200000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50200000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50200000_P_status_LEN 1
#define DT_N_S_soc_S_pio_50200000_P_status_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_compatible {"raspberrypi,pico-pio"}
#define DT_N_S_soc_S_pio_50200000_P_compatible_IDX_0 "raspberrypi,pico-pio"
#define DT_N_S_soc_S_pio_50200000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-pio
#define DT_N_S_soc_S_pio_50200000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_pio
#define DT_N_S_soc_S_pio_50200000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_PIO
#define DT_N_S_soc_S_pio_50200000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50200000, compatible, 0)
#define DT_N_S_soc_S_pio_50200000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50200000, compatible, 0)
#define DT_N_S_soc_S_pio_50200000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50200000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50200000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50200000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50200000_P_compatible_LEN 1
#define DT_N_S_soc_S_pio_50200000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_reg {1344274432 /* 0x50200000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pio_50200000_P_reg_IDX_0 1344274432
#define DT_N_S_soc_S_pio_50200000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pio_50200000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_clocks_IDX_0_PH DT_N_S_soc_S_system_clk
#define DT_N_S_soc_S_pio_50200000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50200000, clocks, 0)
#define DT_N_S_soc_S_pio_50200000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50200000, clocks, 0)
#define DT_N_S_soc_S_pio_50200000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50200000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50200000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50200000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50200000_P_clocks_LEN 1
#define DT_N_S_soc_S_pio_50200000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_wakeup_source 0
#define DT_N_S_soc_S_pio_50200000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pio_50200000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_4000c000
#define DT_N_S_soc_S_pio_50200000_P_resets_IDX_0_VAL_id 10
#define DT_N_S_soc_S_pio_50200000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pio_50200000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50200000, resets, 0)
#define DT_N_S_soc_S_pio_50200000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50200000, resets, 0)
#define DT_N_S_soc_S_pio_50200000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50200000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50200000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50200000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50200000_P_resets_LEN 1
#define DT_N_S_soc_S_pio_50200000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/pio@50300000
 *
 * Node identifier: DT_N_S_soc_S_pio_50300000
 *
 * Binding (compatible = raspberrypi,pico-pio):
 *   $ZEPHYR_BASE\dts\bindings\misc\raspberrypi,pico-pio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pio_50300000_PATH "/soc/pio@50300000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pio_50300000_FULL_NAME "pio@50300000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pio_50300000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pio_50300000_CHILD_IDX 22

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pio_50300000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pio_50300000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pio_50300000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pio_50300000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pio_50300000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pio_50300000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pio_50300000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pio_50300000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pio_50300000_ORD 37
#define DT_N_S_soc_S_pio_50300000_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pio_50300000_REQUIRES_ORDS \
	4, /* /soc */ \
	8, /* /soc/reset-controller@4000c000 */ \
	29, /* /soc/system-clk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pio_50300000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pio_50300000_EXISTS 1
#define DT_N_INST_1_raspberrypi_pico_pio DT_N_S_soc_S_pio_50300000
#define DT_N_NODELABEL_pio1              DT_N_S_soc_S_pio_50300000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pio_50300000_REG_NUM 1
#define DT_N_S_soc_S_pio_50300000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_REG_IDX_0_VAL_ADDRESS 1345323008 /* 0x50300000 */
#define DT_N_S_soc_S_pio_50300000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pio_50300000_RANGES_NUM 0
#define DT_N_S_soc_S_pio_50300000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pio_50300000_IRQ_NUM 0
#define DT_N_S_soc_S_pio_50300000_COMPAT_MATCHES_raspberrypi_pico_pio 1
#define DT_N_S_soc_S_pio_50300000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_pio_50300000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_COMPAT_MODEL_IDX_0 "pico-pio"
#define DT_N_S_soc_S_pio_50300000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pio_50300000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pio_50300000_P_status "disabled"
#define DT_N_S_soc_S_pio_50300000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pio_50300000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pio_50300000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pio_50300000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pio_50300000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_pio_50300000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pio_50300000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pio_50300000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50300000, status, 0)
#define DT_N_S_soc_S_pio_50300000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50300000, status, 0)
#define DT_N_S_soc_S_pio_50300000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50300000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50300000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50300000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50300000_P_status_LEN 1
#define DT_N_S_soc_S_pio_50300000_P_status_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_compatible {"raspberrypi,pico-pio"}
#define DT_N_S_soc_S_pio_50300000_P_compatible_IDX_0 "raspberrypi,pico-pio"
#define DT_N_S_soc_S_pio_50300000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-pio
#define DT_N_S_soc_S_pio_50300000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_pio
#define DT_N_S_soc_S_pio_50300000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_PIO
#define DT_N_S_soc_S_pio_50300000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50300000, compatible, 0)
#define DT_N_S_soc_S_pio_50300000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50300000, compatible, 0)
#define DT_N_S_soc_S_pio_50300000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50300000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50300000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50300000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50300000_P_compatible_LEN 1
#define DT_N_S_soc_S_pio_50300000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_reg {1345323008 /* 0x50300000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pio_50300000_P_reg_IDX_0 1345323008
#define DT_N_S_soc_S_pio_50300000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pio_50300000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_clocks_IDX_0_PH DT_N_S_soc_S_system_clk
#define DT_N_S_soc_S_pio_50300000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50300000, clocks, 0)
#define DT_N_S_soc_S_pio_50300000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50300000, clocks, 0)
#define DT_N_S_soc_S_pio_50300000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50300000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50300000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50300000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50300000_P_clocks_LEN 1
#define DT_N_S_soc_S_pio_50300000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_wakeup_source 0
#define DT_N_S_soc_S_pio_50300000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pio_50300000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_4000c000
#define DT_N_S_soc_S_pio_50300000_P_resets_IDX_0_VAL_id 11
#define DT_N_S_soc_S_pio_50300000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_pio_50300000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pio_50300000, resets, 0)
#define DT_N_S_soc_S_pio_50300000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pio_50300000, resets, 0)
#define DT_N_S_soc_S_pio_50300000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pio_50300000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50300000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pio_50300000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pio_50300000_P_resets_LEN 1
#define DT_N_S_soc_S_pio_50300000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/peripheral-clk
 *
 * Node identifier: DT_N_S_soc_S_peripheral_clk
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_peripheral_clk_PATH "/soc/peripheral-clk"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_peripheral_clk_FULL_NAME "peripheral-clk"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_peripheral_clk_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_peripheral_clk_CHILD_IDX 4

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_peripheral_clk_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_peripheral_clk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_peripheral_clk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_clk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_peripheral_clk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_peripheral_clk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_peripheral_clk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_peripheral_clk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_peripheral_clk_ORD 38
#define DT_N_S_soc_S_peripheral_clk_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_peripheral_clk_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_peripheral_clk_SUPPORTS_ORDS \
	39, /* /soc/spi@4003c000 */ \
	40, /* /soc/spi@40040000 */ \
	44, /* /soc/uart@40034000 */ \
	45, /* /soc/uart@40038000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_peripheral_clk_EXISTS 1
#define DT_N_INST_0_fixed_clock       DT_N_S_soc_S_peripheral_clk
#define DT_N_NODELABEL_peripheral_clk DT_N_S_soc_S_peripheral_clk

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_peripheral_clk_REG_NUM 0
#define DT_N_S_soc_S_peripheral_clk_RANGES_NUM 0
#define DT_N_S_soc_S_peripheral_clk_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_peripheral_clk_IRQ_NUM 0
#define DT_N_S_soc_S_peripheral_clk_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_soc_S_peripheral_clk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_peripheral_clk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_peripheral_clk_P_clock_frequency 125000000
#define DT_N_S_soc_S_peripheral_clk_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /soc/spi@4003c000
 *
 * Node identifier: DT_N_S_soc_S_spi_4003c000
 *
 * Binding (compatible = raspberrypi,pico-spi):
 *   $ZEPHYR_BASE\dts\bindings\spi\raspberrypi,pico-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_4003c000_PATH "/soc/spi@4003c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_4003c000_FULL_NAME "spi@4003c000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_4003c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_4003c000_CHILD_IDX 10

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_4003c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_4003c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_4003c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_4003c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_4003c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_4003c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_4003c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_4003c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_4003c000_ORD 39
#define DT_N_S_soc_S_spi_4003c000_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_4003c000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/reset-controller@4000c000 */ \
	22, /* /pin-controller/spi0_default */ \
	38, /* /soc/peripheral-clk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_4003c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_4003c000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_spi DT_N_S_soc_S_spi_4003c000
#define DT_N_INST_0_arm_pl022            DT_N_S_soc_S_spi_4003c000
#define DT_N_NODELABEL_spi0              DT_N_S_soc_S_spi_4003c000
#define DT_N_NODELABEL_pico_spi          DT_N_S_soc_S_spi_4003c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_4003c000_REG_NUM 1
#define DT_N_S_soc_S_spi_4003c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_REG_IDX_0_VAL_ADDRESS 1073987584 /* 0x4003c000 */
#define DT_N_S_soc_S_spi_4003c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_4003c000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_4003c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_4003c000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_4003c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_spi_4003c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_spi_4003c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_IRQ_NAME_spi0_VAL_irq DT_N_S_soc_S_spi_4003c000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_spi_4003c000_IRQ_NAME_spi0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_IRQ_NAME_spi0_VAL_priority DT_N_S_soc_S_spi_4003c000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_spi_4003c000_IRQ_NAME_spi0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_COMPAT_MATCHES_raspberrypi_pico_spi 1
#define DT_N_S_soc_S_spi_4003c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_spi_4003c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_COMPAT_MODEL_IDX_0 "pico-spi"
#define DT_N_S_soc_S_spi_4003c000_COMPAT_MATCHES_arm_pl022 1
#define DT_N_S_soc_S_spi_4003c000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_COMPAT_VENDOR_IDX_1 "ARM Ltd."
#define DT_N_S_soc_S_spi_4003c000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_COMPAT_MODEL_IDX_1 "pl022"
#define DT_N_S_soc_S_spi_4003c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_4003c000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_4003c000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_4003c000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_4003c000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_4003c000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_spi0_default

/* Generic property macros: */
#define DT_N_S_soc_S_spi_4003c000_P_reg {1073987584 /* 0x4003c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_4003c000_P_reg_IDX_0 1073987584
#define DT_N_S_soc_S_spi_4003c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_4003c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_clk
#define DT_N_S_soc_S_spi_4003c000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4003c000, clocks, 0)
#define DT_N_S_soc_S_spi_4003c000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4003c000, clocks, 0)
#define DT_N_S_soc_S_spi_4003c000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4003c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4003c000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4003c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4003c000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_4003c000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_clock_frequency 8000000
#define DT_N_S_soc_S_spi_4003c000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_status "okay"
#define DT_N_S_soc_S_spi_4003c000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_4003c000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_4003c000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_4003c000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_4003c000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_4003c000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_4003c000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_4003c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4003c000, status, 0)
#define DT_N_S_soc_S_spi_4003c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4003c000, status, 0)
#define DT_N_S_soc_S_spi_4003c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4003c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4003c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4003c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4003c000_P_status_LEN 1
#define DT_N_S_soc_S_spi_4003c000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_compatible {"raspberrypi,pico-spi", "arm,pl022"}
#define DT_N_S_soc_S_spi_4003c000_P_compatible_IDX_0 "raspberrypi,pico-spi"
#define DT_N_S_soc_S_spi_4003c000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-spi
#define DT_N_S_soc_S_spi_4003c000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_spi
#define DT_N_S_soc_S_spi_4003c000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_SPI
#define DT_N_S_soc_S_spi_4003c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_compatible_IDX_1 "arm,pl022"
#define DT_N_S_soc_S_spi_4003c000_P_compatible_IDX_1_STRING_UNQUOTED arm,pl022
#define DT_N_S_soc_S_spi_4003c000_P_compatible_IDX_1_STRING_TOKEN arm_pl022
#define DT_N_S_soc_S_spi_4003c000_P_compatible_IDX_1_STRING_UPPER_TOKEN ARM_PL022
#define DT_N_S_soc_S_spi_4003c000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4003c000, compatible, 0) \
	fn(DT_N_S_soc_S_spi_4003c000, compatible, 1)
#define DT_N_S_soc_S_spi_4003c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4003c000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4003c000, compatible, 1)
#define DT_N_S_soc_S_spi_4003c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4003c000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_4003c000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4003c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4003c000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_4003c000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4003c000_P_compatible_LEN 2
#define DT_N_S_soc_S_spi_4003c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_interrupts {18 /* 0x12 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_spi_4003c000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_spi_4003c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_spi_4003c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_interrupt_names {"spi0"}
#define DT_N_S_soc_S_spi_4003c000_P_interrupt_names_IDX_0 "spi0"
#define DT_N_S_soc_S_spi_4003c000_P_interrupt_names_IDX_0_STRING_UNQUOTED spi0
#define DT_N_S_soc_S_spi_4003c000_P_interrupt_names_IDX_0_STRING_TOKEN spi0
#define DT_N_S_soc_S_spi_4003c000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN SPI0
#define DT_N_S_soc_S_spi_4003c000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4003c000, interrupt_names, 0)
#define DT_N_S_soc_S_spi_4003c000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4003c000, interrupt_names, 0)
#define DT_N_S_soc_S_spi_4003c000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4003c000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4003c000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4003c000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4003c000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_spi_4003c000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_4003c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_4003c000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_spi0_default
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_spi0_default
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4003c000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4003c000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4003c000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4003c000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4003c000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4003c000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4003c000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4003c000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_4003c000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_4000c000
#define DT_N_S_soc_S_spi_4003c000_P_resets_IDX_0_VAL_id 16
#define DT_N_S_soc_S_spi_4003c000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_spi_4003c000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_4003c000, resets, 0)
#define DT_N_S_soc_S_spi_4003c000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_4003c000, resets, 0)
#define DT_N_S_soc_S_spi_4003c000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_4003c000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4003c000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_4003c000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_4003c000_P_resets_LEN 1
#define DT_N_S_soc_S_spi_4003c000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/spi@40040000
 *
 * Node identifier: DT_N_S_soc_S_spi_40040000
 *
 * Binding (compatible = raspberrypi,pico-spi):
 *   $ZEPHYR_BASE\dts\bindings\spi\raspberrypi,pico-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40040000_PATH "/soc/spi@40040000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40040000_FULL_NAME "spi@40040000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40040000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40040000_CHILD_IDX 11

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_40040000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40040000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40040000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40040000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_40040000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40040000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_40040000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40040000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40040000_ORD 40
#define DT_N_S_soc_S_spi_40040000_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40040000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/reset-controller@4000c000 */ \
	38, /* /soc/peripheral-clk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40040000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40040000_EXISTS 1
#define DT_N_INST_1_raspberrypi_pico_spi DT_N_S_soc_S_spi_40040000
#define DT_N_INST_1_arm_pl022            DT_N_S_soc_S_spi_40040000
#define DT_N_NODELABEL_spi1              DT_N_S_soc_S_spi_40040000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40040000_REG_NUM 1
#define DT_N_S_soc_S_spi_40040000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_REG_IDX_0_VAL_ADDRESS 1074003968 /* 0x40040000 */
#define DT_N_S_soc_S_spi_40040000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_40040000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40040000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40040000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40040000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_IRQ_IDX_0_VAL_irq 19
#define DT_N_S_soc_S_spi_40040000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_spi_40040000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_IRQ_NAME_spi1_VAL_irq DT_N_S_soc_S_spi_40040000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_spi_40040000_IRQ_NAME_spi1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_IRQ_NAME_spi1_VAL_priority DT_N_S_soc_S_spi_40040000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_spi_40040000_IRQ_NAME_spi1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_COMPAT_MATCHES_raspberrypi_pico_spi 1
#define DT_N_S_soc_S_spi_40040000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_spi_40040000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_COMPAT_MODEL_IDX_0 "pico-spi"
#define DT_N_S_soc_S_spi_40040000_COMPAT_MATCHES_arm_pl022 1
#define DT_N_S_soc_S_spi_40040000_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_COMPAT_VENDOR_IDX_1 "ARM Ltd."
#define DT_N_S_soc_S_spi_40040000_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_COMPAT_MODEL_IDX_1 "pl022"
#define DT_N_S_soc_S_spi_40040000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40040000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40040000_P_reg {1074003968 /* 0x40040000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_40040000_P_reg_IDX_0 1074003968
#define DT_N_S_soc_S_spi_40040000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_40040000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_clk
#define DT_N_S_soc_S_spi_40040000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40040000, clocks, 0)
#define DT_N_S_soc_S_spi_40040000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40040000, clocks, 0)
#define DT_N_S_soc_S_spi_40040000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40040000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40040000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40040000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40040000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40040000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_status "disabled"
#define DT_N_S_soc_S_spi_40040000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_spi_40040000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40040000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40040000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_spi_40040000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40040000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40040000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40040000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40040000, status, 0)
#define DT_N_S_soc_S_spi_40040000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40040000, status, 0)
#define DT_N_S_soc_S_spi_40040000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40040000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40040000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40040000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40040000_P_status_LEN 1
#define DT_N_S_soc_S_spi_40040000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_compatible {"raspberrypi,pico-spi", "arm,pl022"}
#define DT_N_S_soc_S_spi_40040000_P_compatible_IDX_0 "raspberrypi,pico-spi"
#define DT_N_S_soc_S_spi_40040000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-spi
#define DT_N_S_soc_S_spi_40040000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_spi
#define DT_N_S_soc_S_spi_40040000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_SPI
#define DT_N_S_soc_S_spi_40040000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_compatible_IDX_1 "arm,pl022"
#define DT_N_S_soc_S_spi_40040000_P_compatible_IDX_1_STRING_UNQUOTED arm,pl022
#define DT_N_S_soc_S_spi_40040000_P_compatible_IDX_1_STRING_TOKEN arm_pl022
#define DT_N_S_soc_S_spi_40040000_P_compatible_IDX_1_STRING_UPPER_TOKEN ARM_PL022
#define DT_N_S_soc_S_spi_40040000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40040000, compatible, 0) \
	fn(DT_N_S_soc_S_spi_40040000, compatible, 1)
#define DT_N_S_soc_S_spi_40040000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40040000, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40040000, compatible, 1)
#define DT_N_S_soc_S_spi_40040000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40040000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40040000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40040000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40040000, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_spi_40040000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40040000_P_compatible_LEN 2
#define DT_N_S_soc_S_spi_40040000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_interrupts {19 /* 0x13 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_spi_40040000_P_interrupts_IDX_0 19
#define DT_N_S_soc_S_spi_40040000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_spi_40040000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_interrupt_names {"spi1"}
#define DT_N_S_soc_S_spi_40040000_P_interrupt_names_IDX_0 "spi1"
#define DT_N_S_soc_S_spi_40040000_P_interrupt_names_IDX_0_STRING_UNQUOTED spi1
#define DT_N_S_soc_S_spi_40040000_P_interrupt_names_IDX_0_STRING_TOKEN spi1
#define DT_N_S_soc_S_spi_40040000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN SPI1
#define DT_N_S_soc_S_spi_40040000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40040000, interrupt_names, 0)
#define DT_N_S_soc_S_spi_40040000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40040000, interrupt_names, 0)
#define DT_N_S_soc_S_spi_40040000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40040000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40040000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40040000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40040000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_spi_40040000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40040000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_40040000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_4000c000
#define DT_N_S_soc_S_spi_40040000_P_resets_IDX_0_VAL_id 17
#define DT_N_S_soc_S_spi_40040000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_spi_40040000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40040000, resets, 0)
#define DT_N_S_soc_S_spi_40040000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_40040000, resets, 0)
#define DT_N_S_soc_S_spi_40040000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40040000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40040000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_40040000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40040000_P_resets_LEN 1
#define DT_N_S_soc_S_spi_40040000_P_resets_EXISTS 1

/*
 * Devicetree node: /xtal-clk
 *
 * Node identifier: DT_N_S_xtal_clk
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE\dts\bindings\clock\fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_xtal_clk_PATH "/xtal-clk"

/* Node's name with unit-address: */
#define DT_N_S_xtal_clk_FULL_NAME "xtal-clk"

/* Node parent (/) identifier: */
#define DT_N_S_xtal_clk_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_xtal_clk_CHILD_IDX 6

/* Helper macros for child nodes of this node. */
#define DT_N_S_xtal_clk_FOREACH_CHILD(fn) 
#define DT_N_S_xtal_clk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_xtal_clk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_xtal_clk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_xtal_clk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_xtal_clk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_xtal_clk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_xtal_clk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_xtal_clk_ORD 41
#define DT_N_S_xtal_clk_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_xtal_clk_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_xtal_clk_SUPPORTS_ORDS \
	42, /* /soc/timer@40054000 */ \
	47, /* /soc/watchdog@40058000 */

/* Existence and alternate IDs: */
#define DT_N_S_xtal_clk_EXISTS 1
#define DT_N_INST_2_fixed_clock DT_N_S_xtal_clk
#define DT_N_NODELABEL_xtal_clk DT_N_S_xtal_clk

/* Macros for properties that are special in the specification: */
#define DT_N_S_xtal_clk_REG_NUM 0
#define DT_N_S_xtal_clk_RANGES_NUM 0
#define DT_N_S_xtal_clk_FOREACH_RANGE(fn) 
#define DT_N_S_xtal_clk_IRQ_NUM 0
#define DT_N_S_xtal_clk_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_xtal_clk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_xtal_clk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_xtal_clk_P_clock_frequency 12000000
#define DT_N_S_xtal_clk_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /soc/timer@40054000
 *
 * Node identifier: DT_N_S_soc_S_timer_40054000
 *
 * Binding (compatible = raspberrypi,pico-timer):
 *   $ZEPHYR_BASE\dts\bindings\timer\raspberrypi,pico-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_40054000_PATH "/soc/timer@40054000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_40054000_FULL_NAME "timer@40054000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_40054000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_40054000_CHILD_IDX 18

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_40054000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_40054000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40054000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40054000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_40054000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_40054000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_40054000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_40054000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_40054000_ORD 42
#define DT_N_S_soc_S_timer_40054000_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_40054000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/reset-controller@4000c000 */ \
	41, /* /xtal-clk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_40054000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_40054000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_timer DT_N_S_soc_S_timer_40054000
#define DT_N_NODELABEL_timer               DT_N_S_soc_S_timer_40054000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_40054000_REG_NUM 1
#define DT_N_S_soc_S_timer_40054000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_REG_IDX_0_VAL_ADDRESS 1074085888 /* 0x40054000 */
#define DT_N_S_soc_S_timer_40054000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_timer_40054000_RANGES_NUM 0
#define DT_N_S_soc_S_timer_40054000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_40054000_IRQ_NUM 4
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_1_VAL_irq 1
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_1_VAL_priority 3
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_2_VAL_irq 2
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_2_VAL_priority 3
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_3_VAL_irq 3
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_3_VAL_priority 3
#define DT_N_S_soc_S_timer_40054000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_NAME_timer_irq_0_VAL_irq DT_N_S_soc_S_timer_40054000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timer_40054000_IRQ_NAME_timer_irq_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_NAME_timer_irq_0_VAL_priority DT_N_S_soc_S_timer_40054000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timer_40054000_IRQ_NAME_timer_irq_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_NAME_timer_irq_1_VAL_irq DT_N_S_soc_S_timer_40054000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timer_40054000_IRQ_NAME_timer_irq_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_NAME_timer_irq_1_VAL_priority DT_N_S_soc_S_timer_40054000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timer_40054000_IRQ_NAME_timer_irq_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_NAME_timer_irq_2_VAL_irq DT_N_S_soc_S_timer_40054000_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timer_40054000_IRQ_NAME_timer_irq_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_NAME_timer_irq_2_VAL_priority DT_N_S_soc_S_timer_40054000_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timer_40054000_IRQ_NAME_timer_irq_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_NAME_timer_irq_3_VAL_irq DT_N_S_soc_S_timer_40054000_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timer_40054000_IRQ_NAME_timer_irq_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_IRQ_NAME_timer_irq_3_VAL_priority DT_N_S_soc_S_timer_40054000_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timer_40054000_IRQ_NAME_timer_irq_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_COMPAT_MATCHES_raspberrypi_pico_timer 1
#define DT_N_S_soc_S_timer_40054000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_timer_40054000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_COMPAT_MODEL_IDX_0 "pico-timer"
#define DT_N_S_soc_S_timer_40054000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_40054000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_40054000_P_status "okay"
#define DT_N_S_soc_S_timer_40054000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_timer_40054000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_timer_40054000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40054000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_timer_40054000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_timer_40054000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_timer_40054000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_timer_40054000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40054000, status, 0)
#define DT_N_S_soc_S_timer_40054000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40054000, status, 0)
#define DT_N_S_soc_S_timer_40054000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40054000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40054000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40054000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40054000_P_status_LEN 1
#define DT_N_S_soc_S_timer_40054000_P_status_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_compatible {"raspberrypi,pico-timer"}
#define DT_N_S_soc_S_timer_40054000_P_compatible_IDX_0 "raspberrypi,pico-timer"
#define DT_N_S_soc_S_timer_40054000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-timer
#define DT_N_S_soc_S_timer_40054000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_timer
#define DT_N_S_soc_S_timer_40054000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_TIMER
#define DT_N_S_soc_S_timer_40054000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40054000, compatible, 0)
#define DT_N_S_soc_S_timer_40054000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40054000, compatible, 0)
#define DT_N_S_soc_S_timer_40054000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40054000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40054000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40054000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40054000_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_40054000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_reg {1074085888 /* 0x40054000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_timer_40054000_P_reg_IDX_0 1074085888
#define DT_N_S_soc_S_timer_40054000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_timer_40054000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_interrupts {0 /* 0x0 */, 3 /* 0x3 */, 1 /* 0x1 */, 3 /* 0x3 */, 2 /* 0x2 */, 3 /* 0x3 */, 3 /* 0x3 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_timer_40054000_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_timer_40054000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_timer_40054000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_interrupts_IDX_2 1
#define DT_N_S_soc_S_timer_40054000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_interrupts_IDX_3 3
#define DT_N_S_soc_S_timer_40054000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_interrupts_IDX_4 2
#define DT_N_S_soc_S_timer_40054000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_interrupts_IDX_5 3
#define DT_N_S_soc_S_timer_40054000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_interrupts_IDX_6 3
#define DT_N_S_soc_S_timer_40054000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_interrupts_IDX_7 3
#define DT_N_S_soc_S_timer_40054000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names {"TIMER_IRQ_0", "TIMER_IRQ_1", "TIMER_IRQ_2", "TIMER_IRQ_3"}
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_0 "TIMER_IRQ_0"
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_0_STRING_UNQUOTED TIMER_IRQ_0
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_0_STRING_TOKEN TIMER_IRQ_0
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN TIMER_IRQ_0
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_1 "TIMER_IRQ_1"
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_1_STRING_UNQUOTED TIMER_IRQ_1
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_1_STRING_TOKEN TIMER_IRQ_1
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN TIMER_IRQ_1
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_2 "TIMER_IRQ_2"
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_2_STRING_UNQUOTED TIMER_IRQ_2
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_2_STRING_TOKEN TIMER_IRQ_2
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN TIMER_IRQ_2
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_3 "TIMER_IRQ_3"
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_3_STRING_UNQUOTED TIMER_IRQ_3
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_3_STRING_TOKEN TIMER_IRQ_3
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_3_STRING_UPPER_TOKEN TIMER_IRQ_3
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40054000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timer_40054000, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timer_40054000, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timer_40054000, interrupt_names, 3)
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40054000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40054000, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40054000, interrupt_names, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40054000, interrupt_names, 3)
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40054000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40054000, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40054000, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_40054000, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40054000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40054000, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40054000, interrupt_names, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_timer_40054000, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timer_40054000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_clocks_IDX_0_PH DT_N_S_xtal_clk
#define DT_N_S_soc_S_timer_40054000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40054000, clocks, 0)
#define DT_N_S_soc_S_timer_40054000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40054000, clocks, 0)
#define DT_N_S_soc_S_timer_40054000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40054000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40054000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40054000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40054000_P_clocks_LEN 1
#define DT_N_S_soc_S_timer_40054000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_wakeup_source 0
#define DT_N_S_soc_S_timer_40054000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_40054000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_4000c000
#define DT_N_S_soc_S_timer_40054000_P_resets_IDX_0_VAL_id 21
#define DT_N_S_soc_S_timer_40054000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_timer_40054000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_40054000, resets, 0)
#define DT_N_S_soc_S_timer_40054000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_40054000, resets, 0)
#define DT_N_S_soc_S_timer_40054000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_40054000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40054000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_40054000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_40054000_P_resets_LEN 1
#define DT_N_S_soc_S_timer_40054000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv6m-systick):
 *   $ZEPHYR_BASE\dts\bindings\timer\arm,armv6m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 43
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv6m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv6m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv6m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv6m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv6m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv6m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv6m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV6M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/uart@40034000
 *
 * Node identifier: DT_N_S_soc_S_uart_40034000
 *
 * Binding (compatible = raspberrypi,pico-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\raspberrypi,pico-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40034000_PATH "/soc/uart@40034000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40034000_FULL_NAME "uart@40034000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40034000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40034000_CHILD_IDX 8

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40034000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40034000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40034000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40034000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40034000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40034000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40034000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40034000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40034000_ORD 44
#define DT_N_S_soc_S_uart_40034000_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40034000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/reset-controller@4000c000 */ \
	25, /* /pin-controller/uart0_default */ \
	38, /* /soc/peripheral-clk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40034000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40034000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_uart DT_N_S_soc_S_uart_40034000
#define DT_N_NODELABEL_uart0              DT_N_S_soc_S_uart_40034000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40034000_REG_NUM 1
#define DT_N_S_soc_S_uart_40034000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_REG_IDX_0_VAL_ADDRESS 1073954816 /* 0x40034000 */
#define DT_N_S_soc_S_uart_40034000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_40034000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40034000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40034000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40034000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_IRQ_IDX_0_VAL_irq 20
#define DT_N_S_soc_S_uart_40034000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_uart_40034000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_IRQ_NAME_uart0_VAL_irq DT_N_S_soc_S_uart_40034000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_uart_40034000_IRQ_NAME_uart0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_IRQ_NAME_uart0_VAL_priority DT_N_S_soc_S_uart_40034000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_uart_40034000_IRQ_NAME_uart0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_COMPAT_MATCHES_raspberrypi_pico_uart 1
#define DT_N_S_soc_S_uart_40034000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_uart_40034000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_COMPAT_MODEL_IDX_0 "pico-uart"
#define DT_N_S_soc_S_uart_40034000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40034000_PINCTRL_NUM 1
#define DT_N_S_soc_S_uart_40034000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_40034000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40034000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_40034000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_uart0_default

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40034000_P_reg {1073954816 /* 0x40034000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_40034000_P_reg_IDX_0 1073954816
#define DT_N_S_soc_S_uart_40034000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_40034000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_interrupts {20 /* 0x14 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_uart_40034000_P_interrupts_IDX_0 20
#define DT_N_S_soc_S_uart_40034000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_uart_40034000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_current_speed 115200
#define DT_N_S_soc_S_uart_40034000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40034000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_status "okay"
#define DT_N_S_soc_S_uart_40034000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_uart_40034000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uart_40034000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_40034000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_uart_40034000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_uart_40034000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_uart_40034000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_40034000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40034000, status, 0)
#define DT_N_S_soc_S_uart_40034000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40034000, status, 0)
#define DT_N_S_soc_S_uart_40034000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40034000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40034000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40034000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40034000_P_status_LEN 1
#define DT_N_S_soc_S_uart_40034000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_compatible {"raspberrypi,pico-uart"}
#define DT_N_S_soc_S_uart_40034000_P_compatible_IDX_0 "raspberrypi,pico-uart"
#define DT_N_S_soc_S_uart_40034000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-uart
#define DT_N_S_soc_S_uart_40034000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_uart
#define DT_N_S_soc_S_uart_40034000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_UART
#define DT_N_S_soc_S_uart_40034000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40034000, compatible, 0)
#define DT_N_S_soc_S_uart_40034000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40034000, compatible, 0)
#define DT_N_S_soc_S_uart_40034000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40034000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40034000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40034000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40034000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40034000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_interrupt_names {"uart0"}
#define DT_N_S_soc_S_uart_40034000_P_interrupt_names_IDX_0 "uart0"
#define DT_N_S_soc_S_uart_40034000_P_interrupt_names_IDX_0_STRING_UNQUOTED uart0
#define DT_N_S_soc_S_uart_40034000_P_interrupt_names_IDX_0_STRING_TOKEN uart0
#define DT_N_S_soc_S_uart_40034000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN UART0
#define DT_N_S_soc_S_uart_40034000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40034000, interrupt_names, 0)
#define DT_N_S_soc_S_uart_40034000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40034000, interrupt_names, 0)
#define DT_N_S_soc_S_uart_40034000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40034000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40034000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40034000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40034000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_uart_40034000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_clk
#define DT_N_S_soc_S_uart_40034000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40034000, clocks, 0)
#define DT_N_S_soc_S_uart_40034000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40034000, clocks, 0)
#define DT_N_S_soc_S_uart_40034000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40034000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40034000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40034000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40034000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_40034000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40034000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_40034000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40034000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40034000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40034000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40034000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40034000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40034000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40034000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40034000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_uart_40034000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_4000c000
#define DT_N_S_soc_S_uart_40034000_P_resets_IDX_0_VAL_id 22
#define DT_N_S_soc_S_uart_40034000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_uart_40034000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40034000, resets, 0)
#define DT_N_S_soc_S_uart_40034000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40034000, resets, 0)
#define DT_N_S_soc_S_uart_40034000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40034000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40034000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40034000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40034000_P_resets_LEN 1
#define DT_N_S_soc_S_uart_40034000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/uart@40038000
 *
 * Node identifier: DT_N_S_soc_S_uart_40038000
 *
 * Binding (compatible = raspberrypi,pico-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\raspberrypi,pico-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_40038000_PATH "/soc/uart@40038000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_40038000_FULL_NAME "uart@40038000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_40038000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_40038000_CHILD_IDX 9

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_40038000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_40038000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40038000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40038000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_40038000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_40038000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_40038000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_40038000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_40038000_ORD 45
#define DT_N_S_soc_S_uart_40038000_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_40038000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/reset-controller@4000c000 */ \
	38, /* /soc/peripheral-clk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_40038000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_40038000_EXISTS 1
#define DT_N_INST_1_raspberrypi_pico_uart DT_N_S_soc_S_uart_40038000
#define DT_N_NODELABEL_uart1              DT_N_S_soc_S_uart_40038000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_40038000_REG_NUM 1
#define DT_N_S_soc_S_uart_40038000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_REG_IDX_0_VAL_ADDRESS 1073971200 /* 0x40038000 */
#define DT_N_S_soc_S_uart_40038000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_40038000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_40038000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_40038000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_40038000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_IRQ_IDX_0_VAL_irq 21
#define DT_N_S_soc_S_uart_40038000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_uart_40038000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_IRQ_NAME_uart1_VAL_irq DT_N_S_soc_S_uart_40038000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_uart_40038000_IRQ_NAME_uart1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_IRQ_NAME_uart1_VAL_priority DT_N_S_soc_S_uart_40038000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_uart_40038000_IRQ_NAME_uart1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_COMPAT_MATCHES_raspberrypi_pico_uart 1
#define DT_N_S_soc_S_uart_40038000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_uart_40038000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_COMPAT_MODEL_IDX_0 "pico-uart"
#define DT_N_S_soc_S_uart_40038000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_40038000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_40038000_P_reg {1073971200 /* 0x40038000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_40038000_P_reg_IDX_0 1073971200
#define DT_N_S_soc_S_uart_40038000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_40038000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_interrupts {21 /* 0x15 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_uart_40038000_P_interrupts_IDX_0 21
#define DT_N_S_soc_S_uart_40038000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_uart_40038000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_40038000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_status "disabled"
#define DT_N_S_soc_S_uart_40038000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_40038000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_40038000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40038000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_40038000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_uart_40038000_P_status_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_40038000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_40038000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40038000, status, 0)
#define DT_N_S_soc_S_uart_40038000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40038000, status, 0)
#define DT_N_S_soc_S_uart_40038000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40038000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40038000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40038000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40038000_P_status_LEN 1
#define DT_N_S_soc_S_uart_40038000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_compatible {"raspberrypi,pico-uart"}
#define DT_N_S_soc_S_uart_40038000_P_compatible_IDX_0 "raspberrypi,pico-uart"
#define DT_N_S_soc_S_uart_40038000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-uart
#define DT_N_S_soc_S_uart_40038000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_uart
#define DT_N_S_soc_S_uart_40038000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_UART
#define DT_N_S_soc_S_uart_40038000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40038000, compatible, 0)
#define DT_N_S_soc_S_uart_40038000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40038000, compatible, 0)
#define DT_N_S_soc_S_uart_40038000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40038000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40038000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40038000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40038000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_40038000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_interrupt_names {"uart1"}
#define DT_N_S_soc_S_uart_40038000_P_interrupt_names_IDX_0 "uart1"
#define DT_N_S_soc_S_uart_40038000_P_interrupt_names_IDX_0_STRING_UNQUOTED uart1
#define DT_N_S_soc_S_uart_40038000_P_interrupt_names_IDX_0_STRING_TOKEN uart1
#define DT_N_S_soc_S_uart_40038000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN UART1
#define DT_N_S_soc_S_uart_40038000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40038000, interrupt_names, 0)
#define DT_N_S_soc_S_uart_40038000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40038000, interrupt_names, 0)
#define DT_N_S_soc_S_uart_40038000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40038000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40038000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40038000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40038000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_uart_40038000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_clocks_IDX_0_PH DT_N_S_soc_S_peripheral_clk
#define DT_N_S_soc_S_uart_40038000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40038000, clocks, 0)
#define DT_N_S_soc_S_uart_40038000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40038000, clocks, 0)
#define DT_N_S_soc_S_uart_40038000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40038000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40038000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40038000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40038000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_40038000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_40038000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_40038000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_4000c000
#define DT_N_S_soc_S_uart_40038000_P_resets_IDX_0_VAL_id 23
#define DT_N_S_soc_S_uart_40038000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_uart_40038000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_40038000, resets, 0)
#define DT_N_S_soc_S_uart_40038000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_40038000, resets, 0)
#define DT_N_S_soc_S_uart_40038000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_40038000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40038000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_40038000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_40038000_P_resets_LEN 1
#define DT_N_S_soc_S_uart_40038000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/vreg@40064000
 *
 * Node identifier: DT_N_S_soc_S_vreg_40064000
 *
 * Binding (compatible = raspberrypi,core-supply-regulator):
 *   $ZEPHYR_BASE\dts\bindings\regulator\raspberrypi,core-supply-regulator.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_vreg_40064000_PATH "/soc/vreg@40064000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_vreg_40064000_FULL_NAME "vreg@40064000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_vreg_40064000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_vreg_40064000_CHILD_IDX 20

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_vreg_40064000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_vreg_40064000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_vreg_40064000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_vreg_40064000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_vreg_40064000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_vreg_40064000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_vreg_40064000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_vreg_40064000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_vreg_40064000_ORD 46
#define DT_N_S_soc_S_vreg_40064000_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_vreg_40064000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_vreg_40064000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_vreg_40064000_EXISTS 1
#define DT_N_INST_0_raspberrypi_core_supply_regulator DT_N_S_soc_S_vreg_40064000
#define DT_N_NODELABEL_vreg                           DT_N_S_soc_S_vreg_40064000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_vreg_40064000_REG_NUM 1
#define DT_N_S_soc_S_vreg_40064000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_vreg_40064000_REG_IDX_0_VAL_ADDRESS 1074151424 /* 0x40064000 */
#define DT_N_S_soc_S_vreg_40064000_REG_IDX_0_VAL_SIZE 1 /* 0x1 */
#define DT_N_S_soc_S_vreg_40064000_RANGES_NUM 0
#define DT_N_S_soc_S_vreg_40064000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_vreg_40064000_IRQ_NUM 0
#define DT_N_S_soc_S_vreg_40064000_COMPAT_MATCHES_raspberrypi_core_supply_regulator 1
#define DT_N_S_soc_S_vreg_40064000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_vreg_40064000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_vreg_40064000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_vreg_40064000_COMPAT_MODEL_IDX_0 "core-supply-regulator"
#define DT_N_S_soc_S_vreg_40064000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_vreg_40064000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_vreg_40064000_P_raspberrypi_brown_out_detection 1
#define DT_N_S_soc_S_vreg_40064000_P_raspberrypi_brown_out_detection_EXISTS 1
#define DT_N_S_soc_S_vreg_40064000_P_raspberrypi_brown_out_threshold 860000
#define DT_N_S_soc_S_vreg_40064000_P_raspberrypi_brown_out_threshold_ENUM_IDX 9
#define DT_N_S_soc_S_vreg_40064000_P_raspberrypi_brown_out_threshold_ENUM_VAL_860000_EXISTS 1
#define DT_N_S_soc_S_vreg_40064000_P_raspberrypi_brown_out_threshold_EXISTS 1
#define DT_N_S_soc_S_vreg_40064000_P_status "okay"
#define DT_N_S_soc_S_vreg_40064000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_vreg_40064000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_vreg_40064000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_vreg_40064000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_vreg_40064000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_vreg_40064000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_vreg_40064000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_vreg_40064000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_vreg_40064000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_vreg_40064000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_vreg_40064000, status, 0)
#define DT_N_S_soc_S_vreg_40064000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_vreg_40064000, status, 0)
#define DT_N_S_soc_S_vreg_40064000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_vreg_40064000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_vreg_40064000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_vreg_40064000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_vreg_40064000_P_status_LEN 1
#define DT_N_S_soc_S_vreg_40064000_P_status_EXISTS 1
#define DT_N_S_soc_S_vreg_40064000_P_compatible {"raspberrypi,core-supply-regulator"}
#define DT_N_S_soc_S_vreg_40064000_P_compatible_IDX_0 "raspberrypi,core-supply-regulator"
#define DT_N_S_soc_S_vreg_40064000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,core-supply-regulator
#define DT_N_S_soc_S_vreg_40064000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_core_supply_regulator
#define DT_N_S_soc_S_vreg_40064000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_CORE_SUPPLY_REGULATOR
#define DT_N_S_soc_S_vreg_40064000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_vreg_40064000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_vreg_40064000, compatible, 0)
#define DT_N_S_soc_S_vreg_40064000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_vreg_40064000, compatible, 0)
#define DT_N_S_soc_S_vreg_40064000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_vreg_40064000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_vreg_40064000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_vreg_40064000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_vreg_40064000_P_compatible_LEN 1
#define DT_N_S_soc_S_vreg_40064000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_vreg_40064000_P_reg {1074151424 /* 0x40064000 */, 1 /* 0x1 */}
#define DT_N_S_soc_S_vreg_40064000_P_reg_IDX_0 1074151424
#define DT_N_S_soc_S_vreg_40064000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_vreg_40064000_P_reg_IDX_1 1
#define DT_N_S_soc_S_vreg_40064000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_vreg_40064000_P_reg_EXISTS 1
#define DT_N_S_soc_S_vreg_40064000_P_wakeup_source 0
#define DT_N_S_soc_S_vreg_40064000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_vreg_40064000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_vreg_40064000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_vreg_40064000_P_regulator_always_on 1
#define DT_N_S_soc_S_vreg_40064000_P_regulator_always_on_EXISTS 1
#define DT_N_S_soc_S_vreg_40064000_P_regulator_boot_on 0
#define DT_N_S_soc_S_vreg_40064000_P_regulator_boot_on_EXISTS 1
#define DT_N_S_soc_S_vreg_40064000_P_regulator_allowed_modes {0 /* 0x0 */}
#define DT_N_S_soc_S_vreg_40064000_P_regulator_allowed_modes_IDX_0 0
#define DT_N_S_soc_S_vreg_40064000_P_regulator_allowed_modes_IDX_0_EXISTS 1
#define DT_N_S_soc_S_vreg_40064000_P_regulator_allowed_modes_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_vreg_40064000, regulator_allowed_modes, 0)
#define DT_N_S_soc_S_vreg_40064000_P_regulator_allowed_modes_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_vreg_40064000, regulator_allowed_modes, 0)
#define DT_N_S_soc_S_vreg_40064000_P_regulator_allowed_modes_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_vreg_40064000, regulator_allowed_modes, 0, __VA_ARGS__)
#define DT_N_S_soc_S_vreg_40064000_P_regulator_allowed_modes_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_vreg_40064000, regulator_allowed_modes, 0, __VA_ARGS__)
#define DT_N_S_soc_S_vreg_40064000_P_regulator_allowed_modes_LEN 1
#define DT_N_S_soc_S_vreg_40064000_P_regulator_allowed_modes_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40058000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40058000
 *
 * Binding (compatible = raspberrypi,pico-watchdog):
 *   $ZEPHYR_BASE\dts\bindings\watchdog\raspberrypi,pico-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40058000_PATH "/soc/watchdog@40058000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40058000_FULL_NAME "watchdog@40058000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40058000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40058000_CHILD_IDX 15

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_40058000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40058000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40058000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40058000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_40058000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40058000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_40058000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40058000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40058000_ORD 47
#define DT_N_S_soc_S_watchdog_40058000_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40058000_REQUIRES_ORDS \
	4, /* /soc */ \
	41, /* /xtal-clk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40058000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40058000_EXISTS 1
#define DT_N_ALIAS_watchdog0                  DT_N_S_soc_S_watchdog_40058000
#define DT_N_INST_0_raspberrypi_pico_watchdog DT_N_S_soc_S_watchdog_40058000
#define DT_N_NODELABEL_wdt0                   DT_N_S_soc_S_watchdog_40058000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40058000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40058000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40058000_REG_IDX_0_VAL_ADDRESS 1074102272 /* 0x40058000 */
#define DT_N_S_soc_S_watchdog_40058000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_watchdog_40058000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40058000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40058000_IRQ_NUM 0
#define DT_N_S_soc_S_watchdog_40058000_COMPAT_MATCHES_raspberrypi_pico_watchdog 1
#define DT_N_S_soc_S_watchdog_40058000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40058000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_watchdog_40058000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40058000_COMPAT_MODEL_IDX_0 "pico-watchdog"
#define DT_N_S_soc_S_watchdog_40058000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40058000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40058000_P_reg {1074102272 /* 0x40058000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_watchdog_40058000_P_reg_IDX_0 1074102272
#define DT_N_S_soc_S_watchdog_40058000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40058000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_watchdog_40058000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40058000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40058000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40058000_P_clocks_IDX_0_PH DT_N_S_xtal_clk
#define DT_N_S_soc_S_watchdog_40058000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40058000, clocks, 0)
#define DT_N_S_soc_S_watchdog_40058000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40058000, clocks, 0)
#define DT_N_S_soc_S_watchdog_40058000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40058000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40058000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40058000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40058000_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_40058000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_40058000_P_status "okay"
#define DT_N_S_soc_S_watchdog_40058000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_watchdog_40058000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_watchdog_40058000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40058000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_watchdog_40058000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40058000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_watchdog_40058000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_watchdog_40058000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_watchdog_40058000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_40058000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40058000, status, 0)
#define DT_N_S_soc_S_watchdog_40058000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40058000, status, 0)
#define DT_N_S_soc_S_watchdog_40058000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40058000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40058000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40058000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40058000_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_40058000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40058000_P_compatible {"raspberrypi,pico-watchdog"}
#define DT_N_S_soc_S_watchdog_40058000_P_compatible_IDX_0 "raspberrypi,pico-watchdog"
#define DT_N_S_soc_S_watchdog_40058000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-watchdog
#define DT_N_S_soc_S_watchdog_40058000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_watchdog
#define DT_N_S_soc_S_watchdog_40058000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_WATCHDOG
#define DT_N_S_soc_S_watchdog_40058000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40058000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40058000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40058000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_40058000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40058000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40058000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40058000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_40058000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40058000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40058000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40058000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40058000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_40058000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_40058000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@18000000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_18000000
 *
 * Binding (compatible = raspberrypi,pico-flash-controller):
 *   $ZEPHYR_BASE\dts\bindings\flash_controller\raspberrypi,pico-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_18000000_PATH "/soc/flash-controller@18000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_18000000_FULL_NAME "flash-controller@18000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_18000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_18000000_CHILD_IDX 3

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_18000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000)
#define DT_N_S_soc_S_flash_controller_18000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000)
#define DT_N_S_soc_S_flash_controller_18000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_18000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_18000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000)
#define DT_N_S_soc_S_flash_controller_18000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000)
#define DT_N_S_soc_S_flash_controller_18000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_18000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_18000000_ORD 48
#define DT_N_S_soc_S_flash_controller_18000000_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_18000000_REQUIRES_ORDS \
	4, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_18000000_SUPPORTS_ORDS \
	49, /* /soc/flash-controller@18000000/flash@10000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_18000000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_flash_controller DT_N_S_soc_S_flash_controller_18000000
#define DT_N_NODELABEL_ssi                            DT_N_S_soc_S_flash_controller_18000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_18000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_18000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_REG_IDX_0_VAL_ADDRESS 402653184 /* 0x18000000 */
#define DT_N_S_soc_S_flash_controller_18000000_REG_IDX_0_VAL_SIZE 252 /* 0xfc */
#define DT_N_S_soc_S_flash_controller_18000000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_18000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_18000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_18000000_COMPAT_MATCHES_raspberrypi_pico_flash_controller 1
#define DT_N_S_soc_S_flash_controller_18000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_flash_controller_18000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_COMPAT_MODEL_IDX_0 "pico-flash-controller"
#define DT_N_S_soc_S_flash_controller_18000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_18000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_18000000_P_reg {402653184 /* 0x18000000 */, 252 /* 0xfc */}
#define DT_N_S_soc_S_flash_controller_18000000_P_reg_IDX_0 402653184
#define DT_N_S_soc_S_flash_controller_18000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_P_reg_IDX_1 252
#define DT_N_S_soc_S_flash_controller_18000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_P_compatible {"raspberrypi,pico-flash-controller"}
#define DT_N_S_soc_S_flash_controller_18000000_P_compatible_IDX_0 "raspberrypi,pico-flash-controller"
#define DT_N_S_soc_S_flash_controller_18000000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-flash-controller
#define DT_N_S_soc_S_flash_controller_18000000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_flash_controller
#define DT_N_S_soc_S_flash_controller_18000000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_18000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_18000000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_18000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_18000000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_18000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_18000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_18000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_18000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_18000000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_18000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_18000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_18000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@18000000/flash@10000000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE\dts\bindings\mtd\soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_PATH "/soc/flash-controller@18000000/flash@10000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_FULL_NAME "flash@10000000"

/* Node parent (/soc/flash-controller@18000000) identifier: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_PARENT DT_N_S_soc_S_flash_controller_18000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_ORD 49
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_REQUIRES_ORDS \
	48, /* /soc/flash-controller@18000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_SUPPORTS_ORDS \
	50, /* /soc/flash-controller@18000000/flash@10000000/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_REG_IDX_0_VAL_ADDRESS 268435456 /* 0x10000000 */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_REG_IDX_0_VAL_SIZE 2097152 /* 0x200000 */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_erase_block_size 4096
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_write_block_size 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_compatible_IDX_0_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_compatible_IDX_0_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_compatible_IDX_0_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_reg {268435456 /* 0x10000000 */, 2097152 /* 0x200000 */}
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_reg_IDX_0 268435456
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_reg_IDX_1 2097152
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@18000000/flash@10000000/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE\dts\bindings\mtd\fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_PATH "/soc/flash-controller@18000000/flash@10000000/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_FULL_NAME "partitions"

/* Node parent (/soc/flash-controller@18000000/flash@10000000) identifier: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_PARENT DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_ORD 50
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_REQUIRES_ORDS \
	49, /* /soc/flash-controller@18000000/flash@10000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_SUPPORTS_ORDS \
	51, /* /soc/flash-controller@18000000/flash@10000000/partitions/partition@0 */ \
	52, /* /soc/flash-controller@18000000/flash@10000000/partitions/partition@100 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@18000000/flash@10000000/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_PATH "/soc/flash-controller@18000000/flash@10000000/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_FULL_NAME "partition@0"

/* Node parent (/soc/flash-controller@18000000/flash@10000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_ORD 51
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_REQUIRES_ORDS \
	50, /* /soc/flash-controller@18000000/flash@10000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_second_stage_bootloader DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 256 /* 0x100 */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_label "second_stage_bootloader"
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_label_STRING_UNQUOTED second_stage_bootloader
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_label_STRING_TOKEN second_stage_bootloader
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN SECOND_STAGE_BOOTLOADER
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_label_IDX_0 "second_stage_bootloader"
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_read_only 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 256 /* 0x100 */}
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_reg_IDX_1 256
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@18000000/flash@10000000/partitions/partition@100
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_PATH "/soc/flash-controller@18000000/flash@10000000/partitions/partition@100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_FULL_NAME "partition@100"

/* Node parent (/soc/flash-controller@18000000/flash@10000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_PARENT DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_CHILD_IDX 1

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_ORD 52
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_REQUIRES_ORDS \
	50, /* /soc/flash-controller@18000000/flash@10000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_EXISTS 1
#define DT_N_NODELABEL_code_partition DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_REG_IDX_0_VAL_ADDRESS 256 /* 0x100 */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_REG_IDX_0_VAL_SIZE 2096896 /* 0x1fff00 */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_label "code-partition"
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_label_STRING_UNQUOTED code-partition
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_label_STRING_TOKEN code_partition
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_label_STRING_UPPER_TOKEN CODE_PARTITION
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_label_IDX_0 "code-partition"
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100, label, 0)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100, label, 0)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_read_only 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_reg {256 /* 0x100 */, 2096896 /* 0x1fff00 */}
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_reg_IDX_0 256
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_reg_IDX_1 2096896
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/usbd@50100000
 *
 * Node identifier: DT_N_S_soc_S_usbd_50100000
 *
 * Binding (compatible = raspberrypi,pico-usbd):
 *   $ZEPHYR_BASE\dts\bindings\usb\raspberrypi,pico-usbd.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usbd_50100000_PATH "/soc/usbd@50100000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usbd_50100000_FULL_NAME "usbd@50100000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usbd_50100000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usbd_50100000_CHILD_IDX 16

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usbd_50100000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0)
#define DT_N_S_soc_S_usbd_50100000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0)
#define DT_N_S_soc_S_usbd_50100000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0)
#define DT_N_S_soc_S_usbd_50100000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0)
#define DT_N_S_soc_S_usbd_50100000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usbd_50100000_ORD 53
#define DT_N_S_soc_S_usbd_50100000_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usbd_50100000_REQUIRES_ORDS \
	4, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/reset-controller@4000c000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usbd_50100000_SUPPORTS_ORDS \
	54, /* /soc/usbd@50100000/cdc_acm_uart0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usbd_50100000_EXISTS 1
#define DT_N_INST_0_raspberrypi_pico_usbd DT_N_S_soc_S_usbd_50100000
#define DT_N_NODELABEL_usbd               DT_N_S_soc_S_usbd_50100000
#define DT_N_NODELABEL_zephyr_udc0        DT_N_S_soc_S_usbd_50100000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usbd_50100000_REG_NUM 1
#define DT_N_S_soc_S_usbd_50100000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_REG_IDX_0_VAL_ADDRESS 1343225856 /* 0x50100000 */
#define DT_N_S_soc_S_usbd_50100000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_usbd_50100000_RANGES_NUM 0
#define DT_N_S_soc_S_usbd_50100000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usbd_50100000_IRQ_NUM 1
#define DT_N_S_soc_S_usbd_50100000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_IRQ_IDX_0_VAL_irq 5
#define DT_N_S_soc_S_usbd_50100000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_usbd_50100000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_IRQ_NAME_usbctrl_VAL_irq DT_N_S_soc_S_usbd_50100000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_usbd_50100000_IRQ_NAME_usbctrl_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_IRQ_NAME_usbctrl_VAL_priority DT_N_S_soc_S_usbd_50100000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_usbd_50100000_IRQ_NAME_usbctrl_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_COMPAT_MATCHES_raspberrypi_pico_usbd 1
#define DT_N_S_soc_S_usbd_50100000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_COMPAT_VENDOR_IDX_0 "Raspberry Pi Foundation"
#define DT_N_S_soc_S_usbd_50100000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_COMPAT_MODEL_IDX_0 "pico-usbd"
#define DT_N_S_soc_S_usbd_50100000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usbd_50100000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usbd_50100000_P_reg {1343225856 /* 0x50100000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_usbd_50100000_P_reg_IDX_0 1343225856
#define DT_N_S_soc_S_usbd_50100000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_usbd_50100000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_interrupts {5 /* 0x5 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_usbd_50100000_P_interrupts_IDX_0 5
#define DT_N_S_soc_S_usbd_50100000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_usbd_50100000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_num_bidir_endpoints 16
#define DT_N_S_soc_S_usbd_50100000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_status "okay"
#define DT_N_S_soc_S_usbd_50100000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_usbd_50100000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usbd_50100000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usbd_50100000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_usbd_50100000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_usbd_50100000_P_status_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_usbd_50100000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usbd_50100000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_50100000, status, 0)
#define DT_N_S_soc_S_usbd_50100000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_50100000, status, 0)
#define DT_N_S_soc_S_usbd_50100000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_50100000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_50100000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_P_status_LEN 1
#define DT_N_S_soc_S_usbd_50100000_P_status_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_compatible {"raspberrypi,pico-usbd"}
#define DT_N_S_soc_S_usbd_50100000_P_compatible_IDX_0 "raspberrypi,pico-usbd"
#define DT_N_S_soc_S_usbd_50100000_P_compatible_IDX_0_STRING_UNQUOTED raspberrypi,pico-usbd
#define DT_N_S_soc_S_usbd_50100000_P_compatible_IDX_0_STRING_TOKEN raspberrypi_pico_usbd
#define DT_N_S_soc_S_usbd_50100000_P_compatible_IDX_0_STRING_UPPER_TOKEN RASPBERRYPI_PICO_USBD
#define DT_N_S_soc_S_usbd_50100000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_50100000, compatible, 0)
#define DT_N_S_soc_S_usbd_50100000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_50100000, compatible, 0)
#define DT_N_S_soc_S_usbd_50100000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_50100000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_50100000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_P_compatible_LEN 1
#define DT_N_S_soc_S_usbd_50100000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names {"usbctrl"}
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_IDX_0 "usbctrl"
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_IDX_0_STRING_UNQUOTED usbctrl
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_IDX_0_STRING_TOKEN usbctrl
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN USBCTRL
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_50100000, interrupt_names, 0)
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_50100000, interrupt_names, 0)
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_50100000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_50100000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_usbd_50100000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_wakeup_source 0
#define DT_N_S_soc_S_usbd_50100000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usbd_50100000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_resets_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_resets_IDX_0_PH DT_N_S_soc_S_reset_controller_4000c000
#define DT_N_S_soc_S_usbd_50100000_P_resets_IDX_0_VAL_id 24
#define DT_N_S_soc_S_usbd_50100000_P_resets_IDX_0_VAL_id_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_P_resets_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_50100000, resets, 0)
#define DT_N_S_soc_S_usbd_50100000_P_resets_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_50100000, resets, 0)
#define DT_N_S_soc_S_usbd_50100000_P_resets_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_50100000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_P_resets_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_50100000, resets, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_P_resets_LEN 1
#define DT_N_S_soc_S_usbd_50100000_P_resets_EXISTS 1

/*
 * Devicetree node: /soc/usbd@50100000/cdc_acm_uart0
 *
 * Node identifier: DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0
 *
 * Binding (compatible = zephyr,cdc-acm-uart):
 *   $ZEPHYR_BASE\dts\bindings\serial\zephyr,cdc-acm-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_PATH "/soc/usbd@50100000/cdc_acm_uart0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_FULL_NAME "cdc_acm_uart0"

/* Node parent (/soc/usbd@50100000) identifier: */
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_PARENT DT_N_S_soc_S_usbd_50100000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_CHILD_IDX 0

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_ORD 54
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_REQUIRES_ORDS \
	53, /* /soc/usbd@50100000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_EXISTS 1
#define DT_N_INST_0_zephyr_cdc_acm_uart DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0
#define DT_N_NODELABEL_cdc_acm_uart0    DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0

/* Bus info (controller: '/soc/usbd@50100000', type: '['usb']') */
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_BUS_usb 1
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_BUS DT_N_S_soc_S_usbd_50100000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_REG_NUM 0
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_RANGES_NUM 0
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_IRQ_NUM 0
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_COMPAT_MATCHES_zephyr_cdc_acm_uart 1
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_COMPAT_MODEL_IDX_0 "cdc-acm-uart"
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_tx_fifo_size 1024
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_tx_fifo_size_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_rx_fifo_size 1024
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_rx_fifo_size_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_hw_flow_control 0
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_compatible {"zephyr,cdc-acm-uart"}
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_compatible_IDX_0 "zephyr,cdc-acm-uart"
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_compatible_IDX_0_STRING_UNQUOTED zephyr,cdc-acm-uart
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_compatible_IDX_0_STRING_TOKEN zephyr_cdc_acm_uart
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_compatible_IDX_0_STRING_UPPER_TOKEN ZEPHYR_CDC_ACM_UART
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0, compatible, 0)
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0, compatible, 0)
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_compatible_LEN 1
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_label "CDC_ACM_0"
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_label_STRING_UNQUOTED CDC_ACM_0
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_label_STRING_TOKEN CDC_ACM_0
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_label_STRING_UPPER_TOKEN CDC_ACM_0
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_label_IDX_0 "CDC_ACM_0"
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0, label, 0)
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0, label, 0)
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_label_LEN 1
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_label_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_wakeup_source 0
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_sram                    DT_N_S_soc_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_18000000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_uart_40034000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_flash_controller_18000000) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100) fn(DT_N_S_soc_S_peripheral_clk) fn(DT_N_S_soc_S_system_clk) fn(DT_N_S_soc_S_reset_controller_4000c000) fn(DT_N_S_soc_S_gpio_40014000) fn(DT_N_S_soc_S_uart_40034000) fn(DT_N_S_soc_S_uart_40038000) fn(DT_N_S_soc_S_spi_4003c000) fn(DT_N_S_soc_S_spi_40040000) fn(DT_N_S_soc_S_adc_4004c000) fn(DT_N_S_soc_S_i2c_40044000) fn(DT_N_S_soc_S_i2c_40048000) fn(DT_N_S_soc_S_watchdog_40058000) fn(DT_N_S_soc_S_usbd_50100000) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0) fn(DT_N_S_soc_S_pwm_40050000) fn(DT_N_S_soc_S_timer_40054000) fn(DT_N_S_soc_S_dma_50000000) fn(DT_N_S_soc_S_vreg_40064000) fn(DT_N_S_soc_S_pio_50200000) fn(DT_N_S_soc_S_pio_50300000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_pin_controller) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1) fn(DT_N_S_pin_controller_S_spi0_default) fn(DT_N_S_pin_controller_S_spi0_default_S_group1) fn(DT_N_S_pin_controller_S_spi0_default_S_group2) fn(DT_N_S_pin_controller_S_pwm_ch4b_default) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1) fn(DT_N_S_pin_controller_S_adc_default) fn(DT_N_S_pin_controller_S_adc_default_S_group1) fn(DT_N_S_dietemp) fn(DT_N_S_xtal_clk) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_pwm_leds) fn(DT_N_S_pwm_leds_S_pwm_led_0)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_memory_20000000) fn(DT_N_S_soc_S_flash_controller_18000000) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100) fn(DT_N_S_soc_S_peripheral_clk) fn(DT_N_S_soc_S_system_clk) fn(DT_N_S_soc_S_reset_controller_4000c000) fn(DT_N_S_soc_S_gpio_40014000) fn(DT_N_S_soc_S_uart_40034000) fn(DT_N_S_soc_S_spi_4003c000) fn(DT_N_S_soc_S_adc_4004c000) fn(DT_N_S_soc_S_i2c_40044000) fn(DT_N_S_soc_S_watchdog_40058000) fn(DT_N_S_soc_S_usbd_50100000) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0) fn(DT_N_S_soc_S_timer_40054000) fn(DT_N_S_soc_S_vreg_40064000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_pin_controller) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1) fn(DT_N_S_pin_controller_S_spi0_default) fn(DT_N_S_pin_controller_S_spi0_default_S_group1) fn(DT_N_S_pin_controller_S_spi0_default_S_group2) fn(DT_N_S_pin_controller_S_pwm_ch4b_default) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1) fn(DT_N_S_pin_controller_S_adc_default) fn(DT_N_S_pin_controller_S_adc_default_S_group1) fn(DT_N_S_xtal_clk) fn(DT_N_S_connector) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_pwm_leds_S_pwm_led_0)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_18000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_clk, __VA_ARGS__) fn(DT_N_S_soc_S_system_clk, __VA_ARGS__) fn(DT_N_S_soc_S_reset_controller_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40034000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40038000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_4003c000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40040000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_4004c000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40044000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40048000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40058000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_50100000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0, __VA_ARGS__) fn(DT_N_S_soc_S_pwm_40050000, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40054000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_vreg_40064000, __VA_ARGS__) fn(DT_N_S_soc_S_pio_50200000, __VA_ARGS__) fn(DT_N_S_soc_S_pio_50300000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm_ch4b_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_adc_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_adc_default_S_group1, __VA_ARGS__) fn(DT_N_S_dietemp, __VA_ARGS__) fn(DT_N_S_xtal_clk, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_pwm_leds, __VA_ARGS__) fn(DT_N_S_pwm_leds_S_pwm_led_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_18000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100, __VA_ARGS__) fn(DT_N_S_soc_S_peripheral_clk, __VA_ARGS__) fn(DT_N_S_soc_S_system_clk, __VA_ARGS__) fn(DT_N_S_soc_S_reset_controller_4000c000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_40034000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_4003c000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_4004c000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40044000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40058000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_50100000, __VA_ARGS__) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0, __VA_ARGS__) fn(DT_N_S_soc_S_timer_40054000, __VA_ARGS__) fn(DT_N_S_soc_S_vreg_40064000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spi0_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm_ch4b_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_pwm_ch4b_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_adc_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_adc_default_S_group1, __VA_ARGS__) fn(DT_N_S_xtal_clk, __VA_ARGS__) fn(DT_N_S_connector, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_pwm_leds_S_pwm_led_0, __VA_ARGS__)
#define DT_COMPAT_fixed_partitions_LABEL_second_stage_bootloader DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_second_stage_bootloader_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_code_partition DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions_S_partition_100
#define DT_COMPAT_fixed_partitions_LABEL_code_partition_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v6m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv6m_systick 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_fixed_clock 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_reset 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_gpio 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_uart 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_spi 1
#define DT_COMPAT_HAS_OKAY_arm_pl022 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_adc 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_i2c 1
#define DT_COMPAT_HAS_OKAY_snps_designware_i2c 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_watchdog 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_usbd 1
#define DT_COMPAT_HAS_OKAY_zephyr_cdc_acm_uart 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_timer 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_core_supply_regulator 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m0_ 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_pinctrl 1
#define DT_COMPAT_HAS_OKAY_raspberrypi_pico_header 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v6m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv6m_systick_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_fixed_clock_NUM_OKAY 3
#define DT_N_INST_raspberrypi_pico_reset_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_gpio_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_uart_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_spi_NUM_OKAY 1
#define DT_N_INST_arm_pl022_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_adc_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_i2c_NUM_OKAY 1
#define DT_N_INST_snps_designware_i2c_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_watchdog_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_usbd_NUM_OKAY 1
#define DT_N_INST_zephyr_cdc_acm_uart_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_timer_NUM_OKAY 1
#define DT_N_INST_raspberrypi_core_supply_regulator_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m0__NUM_OKAY 2
#define DT_N_INST_raspberrypi_pico_pinctrl_NUM_OKAY 1
#define DT_N_INST_raspberrypi_pico_header_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v6m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v6m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v6m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v6m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv6m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv6m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv6m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv6m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_soc_S_memory_20000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_soc_S_memory_20000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_18000000)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_18000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_18000000_S_flash_10000000_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_clock(fn) fn(DT_N_S_soc_S_peripheral_clk) fn(DT_N_S_soc_S_system_clk) fn(DT_N_S_xtal_clk)
#define DT_FOREACH_OKAY_VARGS_fixed_clock(fn, ...) fn(DT_N_S_soc_S_peripheral_clk, __VA_ARGS__) fn(DT_N_S_soc_S_system_clk, __VA_ARGS__) fn(DT_N_S_xtal_clk, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_clock(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_clock(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_reset(fn) fn(DT_N_S_soc_S_reset_controller_4000c000)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_reset(fn, ...) fn(DT_N_S_soc_S_reset_controller_4000c000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_reset(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_reset(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_gpio(fn) fn(DT_N_S_soc_S_gpio_40014000)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_gpio(fn, ...) fn(DT_N_S_soc_S_gpio_40014000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_gpio(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_gpio(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_uart(fn) fn(DT_N_S_soc_S_uart_40034000)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_uart(fn, ...) fn(DT_N_S_soc_S_uart_40034000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_uart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_spi(fn) fn(DT_N_S_soc_S_spi_4003c000)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_spi(fn, ...) fn(DT_N_S_soc_S_spi_4003c000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_spi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_spi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_pl022(fn) fn(DT_N_S_soc_S_spi_4003c000)
#define DT_FOREACH_OKAY_VARGS_arm_pl022(fn, ...) fn(DT_N_S_soc_S_spi_4003c000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_pl022(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_pl022(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_adc(fn) fn(DT_N_S_soc_S_adc_4004c000)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_adc(fn, ...) fn(DT_N_S_soc_S_adc_4004c000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_adc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_adc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_i2c(fn) fn(DT_N_S_soc_S_i2c_40044000)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_i2c(fn, ...) fn(DT_N_S_soc_S_i2c_40044000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_i2c(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_i2c(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_snps_designware_i2c(fn) fn(DT_N_S_soc_S_i2c_40044000)
#define DT_FOREACH_OKAY_VARGS_snps_designware_i2c(fn, ...) fn(DT_N_S_soc_S_i2c_40044000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_snps_designware_i2c(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_snps_designware_i2c(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_watchdog(fn) fn(DT_N_S_soc_S_watchdog_40058000)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_watchdog(fn, ...) fn(DT_N_S_soc_S_watchdog_40058000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_watchdog(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_watchdog(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_usbd(fn) fn(DT_N_S_soc_S_usbd_50100000)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_usbd(fn, ...) fn(DT_N_S_soc_S_usbd_50100000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_usbd(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_usbd(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_cdc_acm_uart(fn) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0)
#define DT_FOREACH_OKAY_VARGS_zephyr_cdc_acm_uart(fn, ...) fn(DT_N_S_soc_S_usbd_50100000_S_cdc_acm_uart0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_cdc_acm_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_cdc_acm_uart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_timer(fn) fn(DT_N_S_soc_S_timer_40054000)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_timer(fn, ...) fn(DT_N_S_soc_S_timer_40054000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_timer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_timer(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_core_supply_regulator(fn) fn(DT_N_S_soc_S_vreg_40064000)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_core_supply_regulator(fn, ...) fn(DT_N_S_soc_S_vreg_40064000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_core_supply_regulator(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_core_supply_regulator(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m0_(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m0_(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m0_(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m0_(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_pinctrl(fn) fn(DT_N_S_pin_controller)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_pinctrl(fn, ...) fn(DT_N_S_pin_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_raspberrypi_pico_header(fn) fn(DT_N_S_connector)
#define DT_FOREACH_OKAY_VARGS_raspberrypi_pico_header(fn, ...) fn(DT_N_S_connector, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_raspberrypi_pico_header(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_raspberrypi_pico_header(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_zephyr_cdc_acm_uart_BUS_usb 1
